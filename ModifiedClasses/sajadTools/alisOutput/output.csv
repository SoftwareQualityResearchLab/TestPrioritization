File Name,Lines*,Statements,Percent Branch Statements,Method Call Statements,Percent Lines with Comments,Classes and Interfaces,Methods per Class,Average Statements per Method,Line Number of Most Complex Method*,Name of Most Complex Method*,Maximum Complexity*,Line Number of Deepest Block,Maximum Block Depth,Average Block Depth,Average Complexity*,Statements at block level 0,Statements at block level 1,Statements at block level 2,Statements at block level 3,Statements at block level 4,Statements at block level 5,Statements at block level 6,Statements at block level 7,Statements at block level 8,Statements at block level 9,commit_count,commiter_count,numberOfReportedBugs
src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,33,3,0/0,0,39/4,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateFunction.java,46,4,0/0,0,54/3,1,2/00,0/00,,,0,40,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorFunction.java,31,3,0/0,0,32/3,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateFunction.java,31,3,0/0,0,32/3,1,1/00,0/00,,,0,32,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java,32,3,0/0,0,34/4,1,1/00,0/00,,,0,33,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorFunction.java,32,3,0/0,0,34/4,1,1/00,0/00,,,0,33,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/function/Abs.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Abs.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Acos.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Acos.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Acosh.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Acosh.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Add.java,30,5,0/0,0,23/3,1,1/00,1/00,30,Add.value(),1,31,2,0/60,1/00,3,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Asin.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Asin.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Asinh.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Asinh.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Atan.java,41,10,0/0,3,22/0,1,2/00,1/00,32,Atan.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Atan2.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Atan2.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Atanh.java,41,10,0/0,3,22/0,1,2/00,1/00,32,Atanh.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Cbrt.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/analysis/function/Ceil.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Ceil.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Constant.java,42,10,0/0,1,28/6,1,3/00,1/00,35,Constant.derivative(),1,36,2,1/00,1/00,3,4,3,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Cos.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Cos.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Cosh.java,35,8,0/0,2,22/9,1,2/00,1/00,31,Cosh.derivative(),1,32,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Divide.java,30,5,0/0,0,23/3,1,1/00,1/00,30,Divide.value(),1,31,2,0/60,1/00,3,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Exp.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Exp.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Expm1.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Expm1.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Floor.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Floor.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Gaussian.java,180,55,10/9,19,46/1,2,3/50,3/00,174,Parametric.validateParameters(),4,55,3,1/49,2/00,12,10,27,6,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java,141,39,5/1,15,47/5,2,2/50,2/00,135,Parametric.validateParameters(),3,137,3,1/28,1/50,11,8,18,2,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/analysis/function/Identity.java,34,7,0/0,1,23/5,1,2/00,1/00,30,Identity.derivative(),1,31,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Inverse.java,40,9,0/0,2,22/5,1,2/00,1/00,31,Inverse.derivative(),1,32,2,0/67,1/00,5,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Log.java,41,10,0/0,3,22/0,1,2/00,1/00,32,Log.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Log10.java,43,11,0/0,4,23/3,1,2/00,1/00,35,Log10.derivative(),1,36,2,0/64,1/00,6,3,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Log1p.java,41,10,0/0,3,22/0,1,2/00,1/00,32,Log1p.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Logistic.java,193,62,8/1,23,43/5,2,2/50,4/20,178,Parametric.validateParameters(),4,69,3,1/52,2/25,12,11,34,5,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/analysis/function/Logit.java,144,37,8/1,14,48/6,2,3/00,2/00,133,Parametric.validateParameters(),3,135,3,1/16,1/40,12,9,14,2,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/analysis/function/Max.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Max.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Min.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Min.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Minus.java,34,7,0/0,1,23/5,1,2/00,1/00,30,Minus.derivative(),1,31,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Multiply.java,30,5,0/0,0,23/3,1,1/00,1/00,30,Multiply.value(),1,31,2,0/60,1/00,3,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/package-info.java,26,1,0/0,0,0/0,0,0/00,0/00,,,0,26,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/function/Pow.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Pow.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Power.java,49,13,0/0,4,26/5,1,3/00,1/00,37,Power.derivative(),1,38,2,0/77,1/00,6,4,3,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Rint.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Rint.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java,147,37,8/1,16,49/7,2,3/00,3/67,139,Parametric.validateParameters(),3,71,3,1/22,1/75,12,8,14,3,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/function/Signum.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Signum.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Sin.java,35,8,0/0,2,22/9,1,2/00,1/00,31,Sin.derivative(),1,32,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Sinc.java,108,29,13/8,14,42/6,1,6/00,2/17,63,Sinc.value(),3,65,3,1/21,1/75,9,10,5,5,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/function/Sinh.java,35,8,0/0,2,22/9,1,2/00,1/00,31,Sinh.derivative(),1,32,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Sqrt.java,41,10,0/0,4,22/0,1,2/00,1/00,32,Sqrt.derivative(),1,33,2,0/60,1/00,6,2,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/StepFunction.java,90,30,20/0,7,37/8,1,2/00,9/00,60,StepFunction.StepFunction(),6,64,3,1/53,5/00,8,4,12,6,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/function/Subtract.java,30,5,0/0,0,23/3,1,1/00,1/00,30,Subtract.value(),1,31,2,0/60,1/00,3,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/function/Tan.java,42,11,0/0,4,21/4,1,2/00,1/50,32,Tan.derivative(),1,33,2,0/73,1/00,6,2,3,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Tanh.java,42,11,0/0,4,21/4,1,2/00,1/50,32,Tanh.derivative(),1,33,2,0/73,1/00,6,2,3,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/function/Ulp.java,31,6,0/0,1,22/6,1,1/00,1/00,31,Ulp.value(),1,32,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,277,75,16/0,62,38/6,2,4/00,7/63,32,FunctionUtils.FunctionUtils(),1,270,6,1/18,1/00,20,32,18,4,1,0,1,0,0,0,11,3,0
src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,227,67,22/4,44,34/8,1,5/00,8/60,198,LegendreGaussIntegrator.doIntegrate(),4,143,4,2/19,2/20,9,15,12,16,15,0,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/analysis/integration/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,129,45,13/3,17,36/4,1,4/00,8/00,102,RombergIntegrator.doIntegrate(),6,135,5,2/13,2/75,8,5,13,12,6,1,0,0,0,0,22,3,0
src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,119,36,16/7,16,37/8,1,4/00,5/75,101,SimpsonIntegrator.doIntegrate(),6,121,5,1/92,2/75,8,5,10,9,3,1,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,151,47,17/0,16,41/7,1,5/00,6/40,142,TrapezoidIntegrator.doIntegrate(),5,155,5,2/13,2/80,8,7,10,16,5,1,0,0,0,0,24,3,0
src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,83,14,0/0,0,59/0,1,7/00,0/00,,,0,37,1,0/50,0/00,7,7,0,0,0,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,230,70,4/3,22,48/3,1,12/00,2/75,109,UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(),3,121,3,1/36,1/25,12,25,29,4,0,0,0,0,0,0,25,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,485,187,8/0,94,33/4,5,2/60,12/62,91,BicubicSplineInterpolatingFunction.BicubicSplineInterpolatingFunction(),9,533,9+,2/28,9/00,20,44,74,21,8,7,7,6,0,3,24,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,129,51,3/9,36,27/9,1,1/00,43/00,,,0,40,3,1/75,0/00,7,1,41,2,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,43,4,0/0,0,48/8,1,1/00,0/00,,,0,44,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java,106,24,8/3,8,57/5,1,2/00,8/00,97,DividedDifferenceInterpolator.computeDividedDifference(),3,107,4,1/71,2/00,5,3,12,2,2,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,66,25,16/0,8,27/3,1,1/00,16/00,43,LinearInterpolator.interpolate(),5,45,3,1/56,5/00,8,1,10,6,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,410,142,17/6,37,51/7,1,10/00,11/10,204,LoessInterpolator.smooth(),19,258,5,2/60,3/80,14,17,44,22,27,18,0,0,0,0,24,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,222,82,18/3,33,41/0,2,4/50,5/67,146,MicrosphereInterpolatingFunction.MicrosphereInterpolatingFunction(),10,105,4,2/07,2/78,14,8,27,24,9,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,89,22,9/1,5,42/7,1,3/00,3/00,70,MicrosphereInterpolator.MicrosphereInterpolator(),3,73,3,1/23,1/67,6,7,7,2,0,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java,47,4,0/0,0,55/3,1,1/00,0/00,,,0,49,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,52,7,0/0,1,50/0,1,1/00,1/00,54,NevilleInterpolator.interpolate(),1,55,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,123,51,11/8,30,26/8,1,3/00,1/33,44,SmoothingPolynomialBicubicSplineInterpolator.SmoothingPolynomialBicubicSplineInterpolator(),1,86,4,1/77,1/00,8,6,30,6,2,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,113,45,13/3,13,37/2,1,1/00,36/00,67,SplineInterpolator.interpolate(),7,69,3,1/93,7/00,8,1,22,14,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,446,121,11/6,80,27/1,2,1/50,28/33,145,TricubicSplineInterpolatingFunction.TricubicSplineInterpolatingFunction(),14,161,3,1/43,14/00,31,18,62,11,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,178,82,2/4,58,20/2,1,1/00,16/00,34,TricubicSplineInterpolator.interpolate(),6,39,3,1/16,6/00,5,61,14,2,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,46,4,0/0,0,52/2,1,1/00,0/00,,,0,47,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,36,4,0/0,0,41/7,1,1/00,0/00,,,0,37,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,110,39,7/7,14,36/4,1,3/00,8/33,83,UnivariateRealPeriodicInterpolator.interpolate(),4,86,3,1/72,2/00,7,7,15,10,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/MultivariateFunction.java,40,3,0/0,0,50/0,1,1/00,0/00,,,0,42,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,32,3,0/0,0,34/4,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/MultivariateVectorFunction.java,32,3,0/0,0,34/4,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/package-info.java,33,1,0/0,0,0/0,0,0/00,0/00,,,0,33,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/ParametricUnivariateFunction.java,42,4,0/0,0,50/0,1,2/00,0/00,,,0,35,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/polynomials/package-info.java,23,1,0/0,0,0/0,0,0/00,0/00,,,0,23,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,358,140,23/6,58,38/8,2,8/00,6/38,286,PolynomialFunction.toString(),13,300,6,2/28,3/06,12,19,61,27,11,7,3,0,0,0,21,3,0
src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,301,108,16/7,34,50/5,1,10/00,8/60,253,PolynomialFunctionLagrangeForm.computeCoefficients(),8,277,5,2/24,2/80,8,14,47,23,15,1,0,0,0,0,22,3,0
src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,203,58,12/1,18,54/2,1,9/00,4/33,179,PolynomialFunctionNewtonForm.verifyInputArray(),4,190,4,1/72,1/89,6,13,31,7,1,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,194,53,13/2,19,55/7,1,7/00,4/57,100,PolynomialSplineFunction.value(),5,103,3,1/53,2/29,11,10,25,7,0,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,382,114,0/9,86,46/3,6,1/00,13/00,89,createChebyshevPolynomial().createHermitePolynomial(),1,108,3,0/97,1/00,60,15,32,12,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,73,15,0/0,6,42/5,1,4/00,1/50,41,AbstractDifferentiableUnivariateRealSolver.setup(),1,42,2,1/13,1/00,4,5,6,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,75,15,0/0,5,41/3,1,5/00,1/20,39,AbstractPolynomialSolver.getCoefficients(),1,40,2,1/20,1/00,3,6,6,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java,58,9,0/0,3,41/4,1,3/00,1/00,36,AbstractUnivariateRealSolver.AbstractUnivariateRealSolver(),1,37,2,1/00,1/00,3,3,3,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/solvers/AllowedSolution.java,68,3,0/0,0,64/7,1,0/00,0/00,,,0,74,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,278,76,1/3,23,51/1,1,22/00,1/59,292,BaseAbstractUnivariateRealSolver<FUNC extends UnivariateFunction>.incrementEvaluationCount(),2,294,3,1/38,1/05,8,33,33,2,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,246,105,45/7,23,34/1,2,3/50,12/43,130,BaseSecantSolver.doSolve(),17,191,7,3/62,3/29,6,11,26,11,4,19,23,5,0,0,15,3,3
src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,129,11,0/0,0,78/3,1,8/00,0/00,,,0,44,1,0/73,0/00,3,8,0,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java,83,29,13/8,12,33/7,1,4/00,5/25,62,BisectionSolver.doSolve(),5,78,4,2/10,2/00,3,5,11,6,4,0,0,0,0,0,18,3,1
src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java,87,5,0/0,0,71/3,1,2/00,0/00,,,0,69,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,345,165,25/5,47,33/3,1,9/00,15/78,143,BracketingNthOrderBrentSolver.doSolve(),29,216,6,2/93,4/78,8,15,46,37,38,13,8,0,0,0,7,3,1
src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,210,97,20/6,32,31/9,1,6/00,14/17,137,BrentSolver.brent(),22,182,5,2/91,5/33,5,7,29,18,27,11,0,0,0,0,31,3,2
src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java,26,3,0/0,0,23/1,1,0/00,0/00,,,0,17,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,76,10,0/0,4,55/3,1,4/00,1/00,47,IllinoisSolver.IllinoisSolver(),1,48,2,1/20,1/00,2,4,4,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,303,131,17/6,86,37/3,3,3/00,12/33,88,LaguerreSolver.laguerre(),6,315,6,2/95,3/13,8,10,28,40,31,10,5,0,0,0,25,3,0
src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java,178,75,14/7,34,39/3,1,5/00,13/20,122,MullerSolver.solve(),9,184,5,2/65,3/60,3,6,28,19,15,4,0,0,0,0,20,3,0
src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java,150,63,15/9,26,36/7,1,4/00,13/50,82,MullerSolver2.doSolve(),14,138,5,2/51,4/25,4,5,20,24,9,1,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,80,21,9/5,9,41/2,1,4/00,3/00,73,NewtonSolver.doSolve(),3,82,4,1/62,1/50,4,5,8,3,1,0,0,0,0,0,22,3,0
src/main/java/org/apache/commons/math/analysis/solvers/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,79,10,0/0,4,57/0,1,4/00,1/00,49,PegasusSolver.PegasusSolver(),1,50,2,1/20,1/00,2,4,4,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java,27,3,0/0,0,25/9,1,0/00,0/00,,,0,17,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,89,10,0/0,4,61/8,1,4/00,1/00,59,RegulaFalsiSolver.RegulaFalsiSolver(),1,60,2,1/20,1/00,2,4,4,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java,130,59,20/3,25,32/3,1,4/00,12/75,66,RiddersSolver.doSolve(),13,117,5,2/92,4/00,3,5,17,15,7,12,0,0,0,0,18,3,0
src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,115,36,16/7,16,43/5,1,4/00,7/00,73,SecantSolver.doSolve(),7,108,4,2/17,2/50,3,5,14,11,3,0,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java,26,3,0/0,0,23/1,1,0/00,0/00,,,0,17,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,354,95,20/0,48,50/3,1,9/00,8/56,94,UnivariateRealSolverUtils.forceSide(),16,125,5,2/33,4/38,9,9,40,20,13,4,0,0,0,0,26,3,1
src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,34,3,0/0,0,41/2,1,1/00,0/00,,,0,35,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/analysis/UnivariateFunction.java,81,3,0/0,0,75/3,1,1/00,0/00,,,0,81,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,31,3,0/0,0,35/5,1,1/00,0/00,,,0,32,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/analysis/UnivariateVectorFunction.java,31,3,0/0,0,35/5,1,1/00,0/00,,,0,32,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/complex/Complex.java,1136,257,22/2,164,64/2,1,44/00,4/36,246,Complex.divide(),9,124,4,2/02,2/75,11,54,116,72,4,0,0,0,0,0,37,3,4
src/main/java/org/apache/commons/math/complex/ComplexField.java,71,19,0/0,1,39/4,2,3/00,0/83,41,ComplexField.readResolve(),1,48,2,1/05,1/00,5,8,6,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/complex/ComplexFormat.java,354,104,3/8,107,45/5,1,8/00,2/25,112,ComplexFormat.ComplexFormat(),5,116,3,1/08,1/50,14,73,14,4,0,0,0,0,0,0,16,3,1
src/main/java/org/apache/commons/math/complex/ComplexUtils.java,66,11,9/1,5,51/5,1,2/00,2/00,64,ComplexUtils.polar2Complex(),2,67,3,1/00,1/50,5,2,3,1,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/complex/package-info.java,23,1,0/0,0,0/0,0,0/00,0/00,,,0,23,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFP.java,377,164,24/4,82,41/4,1,10/00,14/00,180,BracketingNthOrderBrentSolverDFP.solve(),31,271,6,2/87,4/40,8,16,48,39,32,13,8,0,0,0,3,3,0
src/main/java/org/apache/commons/math/dfp/Dfp.java,2065,1161,28/3,422,27/9,1,69/00,15/39,334,Dfp.Dfp(),41,1091,6,2/73,6/01,4,95,407,413,192,41,9,0,0,0,16,3,1
src/main/java/org/apache/commons/math/dfp/DfpDec.java,306,166,28/9,105,23/9,1,19/00,7/63,293,DfpDec.nextAfter(),19,218,4,2/56,2/84,2,19,58,58,29,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/dfp/DfpField.java,628,228,3/1,131,49/0,2,18/00,4/22,189,DfpField.DfpField(),3,206,4,1/92,1/06,4,71,113,20,20,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/dfp/DfpMath.java,800,324,1/5,502,32/7,1,2/00,159/50,33,DfpMath.DfpMath(),1,58,4,2/02,1/00,2,3,309,5,5,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/dfp/package-info.java,88,1,0/0,0,0/0,0,0/00,0/00,,,0,88,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/dfp/UnivariateDfpFunction.java,37,3,0/0,0,45/9,1,1/00,0/00,,,0,38,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,203,57,10/5,26,53/7,2,4/00,3/63,75,AbstractContinuousDistribution.inverseCumulativeProbability(),6,86,4,1/53,1/88,12,17,18,8,3,0,0,0,0,0,36,3,0
src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,137,32,9/4,10,56/9,1,5/00,2/60,60,AbstractDistribution.getNumericalVariance(),2,63,3,1/41,1/60,5,14,8,5,0,0,0,0,0,0,21,3,0
src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,295,82,22/0,35,55/3,1,12/00,4/42,151,AbstractIntegerDistribution.inverseCumulativeProbability(),11,169,5,1/96,2/58,10,19,29,16,4,4,0,0,0,0,32,3,0
src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,220,81,16/0,17,39/5,1,18/00,2/78,104,BetaDistribution.density(),8,110,4,1/77,1/78,7,24,33,15,2,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java,173,57,15/8,12,39/3,1,12/00,2/83,52,BinomialDistribution.probability(),4,55,3,1/61,1/92,8,15,25,9,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java,223,79,15/2,6,40/8,1,18/00,2/72,126,CauchyDistribution.inverseCumulativeProbability(),6,83,3,1/68,1/72,7,23,37,12,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,189,54,11/1,12,44/4,1,16/00,1/94,95,ChiSquaredDistribution.getInitialDomain(),3,97,3,1/63,1/38,3,20,25,6,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java,72,8,0/0,0,65/3,1,5/00,0/00,,,0,41,1,0/63,0/00,3,5,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java,33,3,0/0,0,39/4,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/distribution/Distribution.java,108,11,0/0,0,74/1,1,8/00,0/00,,,0,36,1,0/73,0/00,3,8,0,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,226,69,15/9,9,45/6,1,17/00,2/41,118,ExponentialDistribution.inverseCumulativeProbability(),5,68,3,1/65,1/71,7,21,30,11,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/distribution/FDistribution.java,263,82,11/0,14,42/6,1,17/00,3/06,80,FDistribution.inverseCumulativeProbability(),3,86,3,1/70,1/53,8,22,39,13,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,240,74,14/9,13,45/8,1,17/00,2/65,72,GammaDistribution.getInitialDomain(),3,75,3,1/66,1/65,7,22,34,11,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java,299,95,14/7,40,44/1,1,18/00,3/56,60,HypergeometricDistribution.HypergeometricDistribution(),6,68,3,1/79,1/83,9,22,44,20,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,103,9,0/0,0,74/8,1,7/00,0/00,,,0,34,1,0/78,0/00,2,7,0,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java,305,94,13/8,51,52/8,1,7/00,10/00,149,KolmogorovSmirnovDistribution.cdf(),8,165,4,1/83,3/00,15,9,51,15,4,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,251,91,13/2,14,39/0,1,20/00,2/80,208,NormalDistribution.getInitialDomain(),4,79,3,1/66,1/60,8,27,44,12,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/distribution/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/distribution/PascalDistribution.java,209,65,13/8,11,44/5,1,13/00,3/08,68,PascalDistribution.inverseCumulativeProbability(),4,72,3,1/62,1/77,9,16,31,9,0,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java,243,63,9/5,17,53/9,1,16/00,2/00,134,PoissonDistribution.probability(),5,91,3,1/48,1/44,8,23,26,6,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,193,57,24/6,17,51/8,1,4/00,11/50,178,SaddlePointExpansion.logBinomialProbability(),8,112,4,2/46,4/50,5,6,14,22,10,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/distribution/TDistribution.java,222,70,14/3,12,39/6,1,16/00,2/63,101,TDistribution.cumulativeProbability(),5,112,4,1/69,1/69,8,20,30,10,2,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java,238,77,11/7,21,44/1,1,17/00,2/76,153,WeibullDistribution.inverseCumulativeProbability(),6,87,3,1/62,1/59,8,22,38,9,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java,177,56,10/7,17,42/9,1,12/00,2/92,50,ZipfDistribution.cumulativeProbability(),3,54,3,1/63,1/58,6,15,29,6,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/exception/ConvergenceException.java,47,8,0/0,4,38/3,1,1/00,1/00,36,ConvergenceException.ConvergenceException(),1,37,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,60,13,0/0,2,40/0,1,3/00,1/33,41,DimensionMismatchException.getDimension(),1,44,2,1/00,1/00,4,5,4,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,70,19,0/0,7,34/3,1,4/00,1/25,43,MathArithmeticException.getLocalizedMessage(),1,44,2,1/05,1/00,6,6,7,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,59,15,0/0,5,30/5,1,3/00,1/00,50,MathIllegalArgumentException.getLocalizedMessage(),1,45,2,1/00,1/00,5,5,5,0,0,0,0,0,0,0,22,3,0
src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,52,9,0/0,2,40/4,1,1/00,1/00,53,MathIllegalNumberException.getArgument(),1,46,2,1/00,1/00,3,3,3,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,80,21,0/0,10,35/0,1,4/00,1/00,68,MathIllegalStateException.getLocalizedMessage(),1,46,2,1/14,1/00,6,6,9,0,0,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/exception/MathInternalError.java,53,11,0/0,5,39/6,1,2/00,1/00,37,MathInternalError.MathInternalError(),1,38,2,0/91,1/00,4,4,3,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/exception/MathParseException.java,53,9,0/0,7,35/8,1,2/00,1/00,40,MathParseException.MathParseException(),1,44,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,67,18,0/0,6,32/8,1,4/00,1/00,43,MathUnsupportedOperationException.getLocalizedMessage(),1,44,2,1/00,1/00,6,6,6,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,60,12,0/0,4,41/7,1,2/00,1/00,41,MaxCountExceededException.getMax(),1,42,2,1/00,1/00,4,4,4,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,84,21,0/0,6,44/0,1,6/00,1/33,43,MultiDimensionMismatchException.getExpectedDimension(),1,45,2,1/19,1/00,4,9,8,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/exception/NoBracketingException.java,102,24,0/0,3,49/0,1,5/00,1/00,49,NoBracketingException.getFHi(),1,51,2,1/25,1/00,4,10,10,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/exception/NoDataException.java,43,9,0/0,2,34/9,1,2/00,1/00,36,NoDataException.NoDataException(),1,37,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/exception/NonMonotonicSequenceException.java,115,25,0/0,2,47/0,1,6/00,1/67,75,NonMonotonicSequenceException.NonMonotonicSequenceException(),2,61,2,1/24,1/17,4,11,10,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,51,7,0/0,4,39/2,1,0/00,0/00,,,0,40,2,0/71,0/00,4,1,2,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/exception/NotPositiveException.java,46,8,0/0,2,39/1,1,2/00,1/00,36,NotPositiveException.NotPositiveException(),1,37,2,0/88,1/00,3,3,2,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,46,8,0/0,2,39/1,1,2/00,1/00,37,NotStrictlyPositiveException.NotStrictlyPositiveException(),1,38,2,0/88,1/00,3,3,2,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/exception/NullArgumentException.java,49,8,0/0,3,40/8,1,1/00,1/00,40,NullArgumentException.NullArgumentException(),1,41,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,80,17,0/0,2,42/5,1,4/00,1/50,47,NumberIsTooLargeException.NumberIsTooLargeException(),2,53,2,1/12,1/25,4,7,6,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,80,17,0/0,2,42/5,1,4/00,1/50,47,NumberIsTooSmallException.NumberIsTooSmallException(),2,53,2,1/12,1/25,4,7,6,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,74,17,0/0,2,41/9,1,4/00,1/50,43,OutOfRangeException.getHi(),1,46,2,1/12,1/00,4,7,6,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/exception/package-info.java,23,1,0/0,0,0/0,0,0/00,0/00,,,0,23,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java,37,7,0/0,3,32/4,1,1/00,2/00,36,TooManyEvaluationsException.TooManyEvaluationsException(),1,37,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,53,15,33/3,4,30/2,1,2/00,4/50,41,ArgUtils.flatten(),6,47,6,2/33,3/50,4,2,3,1,2,2,1,0,0,0,8,3,0
src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java,49,13,0/0,0,28/6,1,4/00,1/00,38,DummyLocalizable.toString(),1,39,2,1/08,1/00,3,6,4,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java,315,106,11/3,65,47/6,1,17/00,4/06,222,ExceptionContext.serializeMessages(),5,239,5,1/94,1/71,13,22,39,24,6,2,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java,32,3,0/0,0,37/5,1,1/00,0/00,,,0,32,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/exception/util/Localizable.java,41,6,0/0,0,43/9,1,2/00,0/00,,,0,34,1,0/33,0/00,4,2,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,376,18,11/1,312,27/9,1,3/00,2/67,371,LocalizedFormats.getLocalizedString(),3,377,4,1/39,1/67,5,5,5,2,1,0,0,0,0,0,51,3,0
src/main/java/org/apache/commons/math/exception/util/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/exception/ZeroException.java,44,8,0/0,3,36/4,1,1/00,1/00,36,ZeroException.ZeroException(),1,37,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/Field.java,54,5,0/0,0,59/3,1,3/00,0/00,,,0,39,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/FieldElement.java,71,10,0/0,0,62/0,1,8/00,0/00,,,0,33,1,0/80,0/00,2,8,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/filter/DefaultMeasurementModel.java,76,15,0/0,2,48/7,1,4/00,1/25,50,DefaultMeasurementModel.getMeasurementNoise(),1,53,2,1/07,1/00,4,6,5,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/filter/DefaultProcessModel.java,149,24,0/0,9,53/7,1,1/00,1/00,73,DefaultProcessModel.DefaultProcessModel(),1,81,2,1/23,1/00,6,8,12,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/filter/KalmanFilter.java,340,97,14/4,102,52/6,1,12/00,5/25,119,KalmanFilter.KalmanFilter(),17,134,3,1/66,2/67,13,21,49,14,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/filter/MeasurementModel.java,42,5,0/0,0,47/6,1,2/00,0/00,,,0,32,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/filter/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/filter/ProcessModel.java,70,9,0/0,0,62/9,1,5/00,0/00,,,0,33,1,0/56,0/00,4,5,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,185,58,8/6,23,46/5,1,13/00,2/54,156,AbstractFormat.parseNextCharacter(),5,165,4,1/60,1/46,9,16,24,7,2,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/fraction/BigFraction.java,1028,228,11/4,243,59/8,1,17/00,10/59,268,BigFraction.BigFraction(),13,133,4,2/03,2/88,13,35,125,43,12,0,0,0,0,0,25,3,0
src/main/java/org/apache/commons/math/fraction/BigFractionField.java,71,19,0/0,1,39/4,2,3/00,0/83,41,BigFractionField.readResolve(),1,48,2,1/05,1/00,5,8,6,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,254,89,18/0,56,46/5,1,14/00,4/50,165,BigFractionFormat.parseNextBigInteger(),5,231,4,1/91,1/86,11,15,39,19,5,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/fraction/Fraction.java,604,212,17/0,87,47/2,1,31/00,4/97,175,Fraction.Fraction(),13,210,4,2/02,2/42,10,48,91,53,10,0,0,0,0,0,18,3,1
src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,49,9,0/0,2,42/9,1,2/00,1/00,41,FractionConversionException.FractionConversionException(),1,42,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/fraction/FractionField.java,71,19,0/0,1,39/4,2,3/00,0/83,41,FractionField.readResolve(),1,48,2,1/05,1/00,5,8,6,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/fraction/FractionFormat.java,234,75,17/3,52,49/1,1,14/00,3/64,172,FractionFormat.parse(),4,236,4,1/85,1/50,9,15,34,12,5,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/fraction/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,210,82,20/7,51,41/0,1,8/00,8/13,135,ProperBigFractionFormat.parse(),9,104,4,2/10,2/38,8,9,38,21,6,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,205,79,19/0,51,42/0,1,7/00,8/86,135,ProperFractionFormat.parse(),8,183,4,2/05,2/29,8,9,38,19,5,0,0,0,0,0,9,3,1
src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java,90,20,0/0,11,52/2,1,5/00,1/20,40,AbstractListChromosome<T>.toString(),1,41,2,1/00,1/00,6,8,6,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,90,28,25/0,16,32/2,1,5/00,3/60,80,BinaryChromosome.isSame(),5,57,4,1/79,2/60,5,5,11,5,2,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/genetics/BinaryMutation.java,45,13,7/7,10,28/9,1,1/00,8/00,35,BinaryMutation.mutate(),3,37,3,1/38,3/00,4,1,7,1,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/genetics/Chromosome.java,104,20,20/0,7,55/8,1,5/00,2/40,89,Chromosome.findSameChromosome(),3,92,4,1/75,1/80,2,6,8,3,1,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/genetics/ChromosomePair.java,63,14,0/0,4,42/9,1,4/00,1/50,38,ChromosomePair.toString(),1,39,2,1/29,1/00,2,6,6,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java,34,3,0/0,0,41/2,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java,99,26,7/7,14,49/5,1,5/00,3/00,96,ElitisticListPopulation.setElitismRate(),3,83,3,1/46,1/60,5,6,13,2,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/genetics/Fitness.java,32,3,0/0,0,37/5,1,1/00,0/00,,,0,33,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java,65,15,13/3,1,43/1,1,3/00,2/67,41,FixedGenerationCount.isSatisfied(),2,43,3,1/60,1/67,2,5,5,3,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,201,57,12/3,32,51/7,1,11/00,3/18,65,GeneticAlgorithm.nextGeneration(),5,154,4,1/81,1/82,4,18,23,9,3,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java,39,6,0/0,2,33/3,1,0/00,0/00,,,0,41,2,0/50,0/00,4,1,1,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/genetics/ListPopulation.java,137,44,11/4,12,42/3,1,11/00,2/09,48,ListPopulation.getFittestChromosome(),3,109,4,1/48,1/45,8,13,18,4,1,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/genetics/MutationPolicy.java,31,3,0/0,0,35/5,1,1/00,0/00,,,0,32,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java,107,25,16/0,24,53/3,1,2/00,9/00,85,OnePointCrossover<T>.crossover(),4,72,3,1/80,3/00,4,3,12,6,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/genetics/package-info.java,24,1,0/0,0,0/0,0,0/00,0/00,,,0,24,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java,40,4,0/0,0,47/5,1,0/00,0/00,,,0,42,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/genetics/Population.java,50,7,0/0,0,52/0,1,5/00,0/00,,,0,30,1,0/71,0/00,2,5,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/genetics/RandomKey.java,270,79,19/0,62,51/1,1,8/00,4/13,150,RandomKey<T> extends AbstractListChromosome<Double> implements PermutationChromosome<T>.isSame(),5,168,4,1/96,2/25,8,10,41,17,3,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,49,15,6/7,12,26/5,1,1/00,8/00,40,RandomKeyMutation.mutate(),2,44,3,1/20,2/00,6,1,7,1,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java,31,3,0/0,0,35/5,1,1/00,0/00,,,0,31,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/genetics/StoppingCondition.java,34,3,0/0,0,41/2,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/genetics/TournamentSelection.java,105,26,7/7,14,48/6,2,3/00,2/67,72,TournamentSelection.tournament(),3,80,4,1/70,1/33,4,7,10,5,1,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/Euclidean1D.java,71,18,0/0,2,42/3,2,2/50,0/80,38,Euclidean1D.readResolve(),1,45,2,0/94,1/00,6,7,5,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/Interval.java,60,15,0/0,0,38/3,1,5/00,1/20,37,Interval.getMidPoint(),1,38,2,1/27,1/00,2,7,6,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSet.java,223,72,13/9,77,39/0,1,10/00,4/50,213,IntervalsSet.recurseList(),8,96,4,2/12,2/67,8,11,25,26,5,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/OrientedPoint.java,98,26,0/0,4,46/9,1,9/00,1/22,42,OrientedPoint.revertSelf(),1,43,2,1/27,1/00,4,11,11,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/package-info.java,24,1,0/0,0,0/0,0,0/00,0/00,,,0,24,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/SubOrientedPoint.java,63,16,0/0,9,23/8,1,3/00,1/33,37,SubOrientedPoint.side(),1,39,2,1/06,1/00,6,3,7,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1D.java,302,107,4/7,38,44/0,1,33/00,1/76,303,Vector1D.equals(),4,312,4,1/53,1/18,9,40,51,6,1,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1DFormat.java,119,36,5/6,19,39/5,1,9/00,1/89,112,Vector1DFormat.parse(),2,118,3,1/25,1/22,10,9,15,2,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,38,7,0/0,1,34/2,1,1/00,1/00,41,CardanEulerSingularityException.CardanEulerSingularityException(),2,42,2,0/57,2/00,4,2,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Euclidean3D.java,63,17,0/0,2,36/5,2,2/50,0/80,37,Euclidean3D.readResolve(),1,44,2,1/00,1/00,5,7,5,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Line.java,193,69,4/3,38,46/1,1,17/00,2/29,73,Line.closestPoint(),2,77,3,1/45,1/25,11,19,36,3,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,41,6,0/0,2,36/6,1,0/00,0/00,,,0,45,2,0/50,0/00,4,1,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/OutlineExtractor.java,221,115,16/5,58,24/4,2,4/50,9/78,159,BoundaryProjector.addContribution(),14,182,8,3/43,3/44,13,7,27,17,12,12,16,9,2,0,7,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/package-info.java,24,1,0/0,0,0/0,0,0/00,0/00,,,0,24,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Plane.java,379,121,0/8,85,47/0,1,18/00,4/56,136,Plane.setNormal(),2,139,3,1/59,1/06,12,27,81,1,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,363,110,0/0,147,32/5,1,4/00,1/00,46,PolyhedronsSet.PolyhedronsSet(),1,47,2,1/60,1/00,19,7,86,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,934,365,12/9,275,46/8,1,23/00,14/35,570,Rotation.getAngles(),37,276,5,2/51,3/87,6,29,161,127,26,16,0,0,0,0,8,3,1
src/main/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrder.java,151,31,0/0,12,55/6,1,5/00,1/60,138,RotationOrder.getA3(),1,140,2,1/19,1/00,2,21,8,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Segment.java,57,15,0/0,0,36/8,1,4/00,1/50,40,Segment.getLine(),1,41,2,1/27,1/00,2,7,6,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubLine.java,115,32,3/1,31,46/1,1,4/00,4/50,43,SubLine.SubLine(),1,83,3,1/66,1/00,8,6,7,11,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubPlane.java,122,50,8/0,50,23/0,1,2/00,8/00,54,SubPlane.side(),3,63,3,1/68,2/00,12,2,26,10,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,508,187,6/4,102,46/9,1,46/00,2/50,319,Vector3D.equals(),6,362,4,1/66,1/43,12,60,97,16,2,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormat.java,139,36,5/6,21,47/5,1,9/00,1/89,127,Vector3DFormat.parse(),2,133,3,1/25,1/22,10,9,15,2,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/Euclidean2D.java,63,17,0/0,2,36/5,2,2/50,0/80,37,Euclidean2D.readResolve(),1,44,2,1/00,1/00,5,7,5,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/Line.java,364,136,3/7,78,39/8,2,8/50,5/65,128,Line.revertSelf(),3,133,3,1/45,1/42,22,42,61,11,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/NestedLoops.java,158,65,21/5,34,37/3,1,6/00,7/50,122,NestedLoops.add(),7,127,4,2/06,3/33,10,10,19,18,8,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/package-info.java,24,1,0/0,0,0/0,0,0/00,0/00,,,0,24,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSet.java,412,154,10/4,172,31/8,1,6/00,15/50,49,PolygonsSet.boxBoundary(),1,222,5,3/13,1/00,21,13,20,20,33,48,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/Segment.java,57,15,0/0,0,36/8,1,4/00,1/50,40,Segment.getLine(),1,41,2,1/27,1/00,2,7,6,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/SubLine.java,176,61,1/6,78,33/5,1,4/00,10/00,80,SubLine.getSegments(),2,87,3,1/80,1/25,17,4,14,26,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2D.java,341,126,4/8,51,43/7,1,36/00,2/03,345,Vector2D.equals(),5,354,4,1/57,1/25,10,43,65,7,1,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2DFormat.java,122,36,5/6,20,40/2,1,9/00,1/89,115,Vector2DFormat.parse(),2,121,3,1/25,1/22,10,9,15,2,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/package-info.java,25,1,0/0,0,0/0,0,0/00,0/00,,,0,25,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/AbstractRegion.java,549,255,32/2,230,34/8,3,10/33,5/77,436,"AbstractRegion<S extends Space, T extends Space> implements Region<S>.recurseSides()",28,453,6,3/04,2/93,9,29,62,57,48,43,8,0,0,0,5,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/AbstractSubHyperplane.java,136,37,5/4,30,42/6,1,6/00,1/17,50,"AbstractSubHyperplane<S extends Space, T extends Space>.isEmpty()",1,127,3,1/59,1/00,4,11,18,4,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/BoundaryAttribute.java,76,12,0/0,0,56/6,1,3/00,1/33,56,BoundaryAttribute<S extends Space>.getPlusInside(),1,58,2,1/08,1/00,3,5,4,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/BoundarySizeVisitor.java,57,18,11/1,7,24/6,1,5/00,1/80,43,BoundarySizeVisitor<S extends Space> implements BSPTreeVisitor<S>.visitInternalNode(),3,48,3,1/44,1/40,3,6,7,2,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/BSPTree.java,568,195,18/5,126,47/9,2,6/50,6/31,0,LeafMerger<S extends Space>.{none}(),14,246,5,2/72,2/86,5,19,70,60,14,27,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/BSPTreeVisitor.java,99,8,0/0,0,72/7,2,1/50,0/00,,,0,83,2,0/75,0/00,3,4,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/Characterization.java,79,27,22/2,4,32/9,1,6/00,2/67,74,Characterization<S extends Space>.add(),7,77,4,1/93,2/33,3,8,8,4,4,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/Embedding.java,53,6,0/0,0,64/2,1,0/00,0/00,,,0,52,1,0/33,0/00,4,2,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/Hyperplane.java,68,9,0/0,0,66/2,1,5/00,0/00,,,0,46,1,0/56,0/00,4,5,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/package-info.java,108,1,0/0,0,0/0,0,0/00,0/00,,,0,108,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/Region.java,164,18,0/0,0,82/3,2,5/00,0/00,,,0,58,2,0/83,0/00,4,13,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/RegionFactory.java,218,72,12/5,69,33/0,6,0/67,0/75,35,RegionFactory<S extends Space>.RegionFactory(),1,56,4,2/46,1/00,3,7,28,22,12,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/Side.java,32,3,0/0,0,28/1,1,0/00,0/00,,,0,36,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/SubHyperplane.java,105,17,0/0,0,62/9,2,4/00,0/00,,,0,105,3,1/50,0/00,3,8,5,4,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/Transform.java,71,7,0/0,0,70/4,1,0/00,0/00,,,0,61,1,0/43,0/00,4,3,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTree.java,566,306,35/0,42,31/3,3,8/00,11/29,369,Node.delete(),13,428,8,4/54,3/67,2,12,35,51,58,55,41,16,36,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/utilities/OrderedTuple.java,356,144,27/8,32,45/8,1,11/00,8/09,247,OrderedTuple.compareTo(),17,268,6,2/70,4/27,4,22,48,29,23,16,2,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/partitioning/utilities/package-info.java,24,1,0/0,0,0/0,0,0/00,0/00,,,0,24,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/Space.java,34,5,0/0,0,35/3,1,2/00,0/00,,,0,31,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/geometry/Vector.java,142,25,0/0,0,70/4,1,17/00,0/00,,,0,34,1,0/84,0/00,4,21,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/geometry/VectorFormat.java,242,70,0/0,43,50/4,1,10/00,1/60,80,VectorFormat<S extends Space>.format(),1,82,2,1/11,1/00,8,46,16,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,974,492,22/8,366,21/7,4,14/75,7/97,136,AbstractFieldMatrix<T extends FieldElement<T>>.buildArray(),118,255,6,3/16,4/83,14,8,80,238,100,50,5,0,0,0,26,3,0
src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,819,454,21/1,291,15/9,6,9/50,7/56,269,getNorm().getFrobeniusNorm(),78,669,7,3/79,4/18,10,14,53,76,188,74,40,4,0,0,28,3,0
src/main/java/org/apache/commons/math/linear/AnyMatrix.java,41,5,0/0,0,46/3,1,3/00,0/00,,,0,32,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,535,231,19/5,141,31/8,1,31/00,4/87,317,Array2DRowFieldMatrix<T extends FieldElement<T>>.setSubMatrix(),9,165,5,2/25,2/26,11,33,107,51,26,3,0,0,0,0,18,3,0
src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,478,191,4/2,161,26/6,1,8/00,21/50,94,Array2DRowRealMatrix.Array2DRowRealMatrix(),8,111,5,1/96,2/14,9,10,158,9,4,1,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,810,340,19/4,187,37/8,1,48/00,4/15,824,ArrayFieldVector<T extends FieldElement<T>> implements FieldVector<T>.equals(),7,668,5,2/14,2/10,13,52,167,94,11,3,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,813,398,21/1,165,27/4,1,61/00,5/26,820,ArrayRealVector.equals(),8,602,5,2/32,2/44,13,64,140,146,32,3,0,0,0,0,33,3,1
src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java,331,158,6/3,66,25/1,1,3/00,48/67,88,BiDiagonalTransformer.getU(),8,112,7,3/47,5/50,3,9,14,32,95,1,4,2,0,0,7,3,0
src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1382,767,18/4,309,21/6,1,46/00,12/52,637,BlockFieldMatrix<T extends FieldElement<T>> extends AbstractFieldMatrix<T>.getSubMatrix(),9,515,9+,3/22,3/50,10,53,258,160,122,89,49,14,10,2,21,3,0
src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1397,785,18/9,245,21/0,1,54/00,13/22,645,BlockRealMatrix.getSubMatrix(),9,492,9+,3/22,3/78,10,61,255,164,127,92,50,14,10,2,19,3,0
src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,273,108,23/1,31,38/8,2,5/50,7/82,257,Solver.solve(),10,278,6,3/00,3/27,4,12,22,28,28,12,2,0,0,0,14,3,0
src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,242,91,11/0,39,43/4,3,2/67,9/13,166,ConjugateGradient.solveInPlace(),13,200,4,2/46,2/50,7,10,29,26,20,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,66,6,0/0,0,65/2,1,4/00,0/00,,,0,48,1,0/67,0/00,2,4,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java,52,11,0/0,0,34/6,1,4/00,0/75,41,DefaultFieldMatrixChangingVisitor<T extends FieldElement<T>>.end(),1,42,2,1/00,1/00,3,5,3,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java,50,10,0/0,0,36/0,1,4/00,0/50,41,DefaultFieldMatrixPreservingVisitor<T extends FieldElement<T>>.end(),1,42,2,0/90,1/00,3,5,2,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java,41,7,0/0,0,31/7,1,3/00,0/67,32,DefaultRealMatrixChangingVisitor.end(),1,38,2,1/00,1/00,2,3,2,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java,39,6,0/0,0,33/3,1,3/00,0/33,32,DefaultRealMatrixPreservingVisitor.end(),1,41,2,0/83,1/00,2,3,1,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/EigenDecomposition.java,592,203,0/5,159,39/2,1,2/00,92/00,101,EigenDecomposition.EigenDecomposition(),2,104,3,1/88,2/00,7,12,182,2,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,68,7,0/0,0,64/7,1,2/00,0/00,,,0,50,1,0/57,0/00,3,4,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,393,192,20/8,86,30/0,2,4/50,9/44,86,FieldLUDecomposition<T extends FieldElement<T>>.FieldLUDecomposition(),13,322,6,3/05,3/89,6,16,28,76,46,18,2,0,0,0,7,3,0
src/main/java/org/apache/commons/math/linear/FieldMatrix.java,726,54,0/0,0,89/3,1,44/00,0/00,,,0,39,1,0/93,0/00,4,50,0,0,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java,53,6,0/0,0,54/7,1,3/00,0/00,,,0,41,1,0/50,0/00,3,3,0,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java,52,6,0/0,0,53/8,1,3/00,0/00,,,0,41,1,0/50,0/00,3,3,0,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/linear/FieldVector.java,239,33,0/0,0,77/4,1,22/00,0/00,,,0,52,1,0/88,0/00,4,29,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/IllConditionedOperatorException.java,40,7,0/0,1,35/0,1,1/00,1/00,40,IllConditionedOperatorException.IllConditionedOperatorException(),1,41,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,34,3,0/0,1,41/2,1,0/00,0/00,,,0,37,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,163,34,8/8,29,54/0,1,6/00,3/17,74,IterativeLinearSolver.checkParameters(),4,84,3,1/44,1/50,7,8,16,3,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,57,8,0/0,3,52/6,1,1/00,1/00,40,IterativeLinearSolverEvent.IterativeLinearSolverEvent(),1,41,2,0/75,1/00,3,4,1,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,95,29,17/2,17,34/7,1,6/00,3/33,55,JacobiPreconditioner.create(),6,65,4,2/07,1/83,2,7,11,5,4,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/linear/LUDecomposition.java,346,164,19/5,47,32/1,2,6/00,11/33,86,LUDecomposition.LUDecomposition(),13,114,5,2/90,4/00,4,17,29,66,37,11,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java,70,15,0/0,5,40/0,1,5/00,1/00,41,MatrixDimensionMismatchException.getExpectedColumnDimension(),1,47,2,1/07,1/00,4,6,5,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/linear/MatrixUtils.java,833,185,0/0,263,49/9,1,2/00,1/00,52,MatrixUtils.createRealMatrix(),1,53,2,0/05,1/00,178,5,2,0,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,69,21,0/0,4,36/2,1,4/00,2/25,44,NonPositiveDefiniteMatrixException.getThreshold(),1,47,2,1/19,1/00,5,7,9,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteOperatorException.java,40,7,0/0,1,35/0,1,1/00,1/00,41,NonPositiveDefiniteOperatorException.NonPositiveDefiniteOperatorException(),1,42,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/linear/NonSelfAdjointOperatorException.java,43,7,0/0,1,39/5,1,1/00,1/00,44,NonSelfAdjointOperatorException.NonSelfAdjointOperatorException(),1,45,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,39,7,0/0,1,33/3,1,1/00,1/00,38,NonSquareMatrixException.NonSquareMatrixException(),1,40,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/linear/NonSquareOperatorException.java,38,7,0/0,1,34/2,1,1/00,1/00,38,NonSquareOperatorException.NonSquareOperatorException(),1,39,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java,68,19,0/0,1,38/2,1,4/00,1/75,45,NonSymmetricMatrixException.getThreshold(),1,48,2,1/16,1/00,4,8,7,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,245,120,15/0,76,26/9,1,16/00,5/94,183,OpenMapRealMatrix.multiply(),6,202,6,2/32,2/13,5,20,51,29,8,5,2,0,0,0,10,3,1
src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,753,363,18/2,269,29/7,3,19/33,4/95,697,OpenMapRealVector.equals(),9,498,5,2/19,2/16,8,57,177,100,20,1,0,0,0,0,35,3,2
src/main/java/org/apache/commons/math/linear/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/linear/PivotingQRDecomposition.java,384,224,22/8,54,20/6,2,8/50,10/88,69,PivotingQRDecomposition.PivotingQRDecomposition(),17,374,7,3/31,4/06,8,22,40,58,40,33,20,3,0,0,4,3,0
src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,191,36,8/3,30,50/3,1,8/00,2/50,124,PreconditionedIterativeLinearSolver.checkParameters(),4,134,4,1/53,1/38,7,9,16,2,2,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/linear/ProvidesResidual.java,35,3,0/0,0,42/9,1,1/00,0/00,,,0,35,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/linear/QRDecomposition.java,377,177,21/5,51,35/3,2,5/50,14/45,353,Solver.solve(),14,224,7,2/99,4/80,7,20,43,50,30,19,9,2,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,72,5,0/0,3,69/4,1,0/00,0/00,,,0,58,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/linear/RealMatrix.java,732,57,0/0,0,88/8,1,51/00,0/00,,,0,45,1,0/89,0/00,6,51,0,0,0,0,0,0,0,0,20,3,0
src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,52,5,0/0,0,55/8,1,3/00,0/00,,,0,39,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,51,5,0/0,0,54/9,1,3/00,0/00,,,0,39,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/linear/RealVector.java,1139,258,1/9,369,49/1,3,3/33,22/60,185,RealVector.subtract(),3,995,7,3/65,2/00,15,18,18,105,44,4,8,48,0,0,36,3,0
src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,257,91,11/0,49,44/7,1,14/00,3/50,72,RealVectorFormat.format(),1,257,4,1/36,1/00,15,42,24,6,4,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java,150,56,25/0,9,38/0,1,3/00,16/67,170,getRootMatrix().getRank(),1,109,6,3/55,1/00,3,3,8,9,18,9,6,0,0,0,6,3,0
src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,35,7,0/0,1,28/6,1,1/00,1/00,35,SingularMatrixException.SingularMatrixException(),1,36,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/SingularOperatorException.java,36,7,0/0,1,27/8,1,1/00,1/00,36,SingularOperatorException.SingularOperatorException(),1,37,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,698,332,29/8,67,31/4,3,6/00,17/00,88,SingularValueDecomposition.SingularValueDecomposition(),85,418,9+,4/46,6/67,6,21,46,55,44,42,48,45,17,9,13,3,0
src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java,164,70,11/4,57,30/5,1,13/00,3/77,86,SparseFieldMatrix<T extends FieldElement<T>> extends AbstractFieldMatrix<T>.setEntry(),3,93,4,1/76,1/62,5,16,41,7,1,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,523,270,18/5,236,26/2,1,34/00,3/68,538,SparseFieldVector<T extends FieldElement<T>> implements FieldVector<T>.equals(),11,383,5,2/23,1/76,9,39,127,74,18,3,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java,26,2,0/0,0,26/9,1,0/00,0/00,,,0,18,0,0/00,0/00,2,0,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/linear/SparseRealVector.java,24,2,0/0,0,25/0,1,0/00,0/00,,,0,17,0,0/00,0/00,2,0,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/linear/SymmLQ.java,1164,299,10/0,141,62/5,3,8/00,9/54,362,State.init(),10,370,6,2/66,2/29,9,28,95,116,37,5,10,0,0,0,9,3,0
src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,230,97,9/3,36,34/3,1,4/00,20/75,97,TriDiagonalTransformer.getQT(),7,116,7,2/92,3/67,4,10,14,54,4,4,6,2,0,0,10,3,0
src/main/java/org/apache/commons/math/MathException.java,187,47,2/1,24,52/9,1,10/00,1/80,159,MathException.getMessage(),2,161,3,1/40,1/10,9,14,20,4,0,0,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/MathRuntimeException.java,445,114,0/9,76,48/1,1,30/00,2/23,164,MathRuntimeException.getMessage(),2,166,3,1/22,1/05,25,45,38,6,0,0,0,0,0,0,29,3,0
src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,344,161,11/8,87,30/5,1,24/00,4/29,289,AbstractIntegrator.acceptStep(),15,349,5,1/87,1/83,25,33,58,30,13,2,0,0,0,0,38,3,1
src/main/java/org/apache/commons/math/ode/AbstractParameterizable.java,70,23,17/4,8,27/1,1,4/00,2/25,60,AbstractParameterizable.isSupported(),3,63,4,1/48,1/75,6,5,8,3,1,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,313,132,20/5,68,41/2,1,10/00,10/50,238,ContinuousOutputModel.setInterpolatedTime(),14,141,4,2/39,3/90,11,16,39,43,23,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/ode/EquationsMapper.java,85,22,9/1,4,43/5,1,5/00,2/00,75,EquationsMapper.insertEquationData(),2,78,3,1/36,1/40,4,8,8,2,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/ode/events/EventHandler.java,175,8,0/0,0,88/0,2,2/00,0/00,,,0,86,2,0/88,0/00,2,5,1,0,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/ode/events/EventState.java,292,128,10/9,45,36/3,2,6/00,7/58,187,EventState.evaluateStep(),13,226,5,2/27,2/67,12,26,47,18,11,15,0,0,0,0,31,3,1
src/main/java/org/apache/commons/math/ode/events/package-info.java,96,1,0/0,0,0/0,0,0/00,0/00,,,0,96,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/ode/ExpandableStatefulODE.java,269,96,11/5,54,46/5,2,9/00,3/44,95,ExpandableStatefulODE.setCompleteState(),3,98,3,1/86,1/61,5,24,46,21,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,98,21,0/0,9,58/2,1,3/00,3/67,78,FirstOrderConverter.computeDerivatives(),1,79,2,1/43,1/00,2,8,11,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java,55,4,0/0,0,61/8,1,2/00,0/00,,,0,54,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,56,5,0/0,0,58/9,1,1/00,0/00,,,0,61,1,0/20,0/00,4,1,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/ode/JacobianMatrices.java,397,157,19/1,51,40/3,3,5/67,6/94,348,JacobiansSecondaryEquations.computeDerivatives(),14,394,9+,3/04,2/82,8,23,47,31,21,10,4,2,4,7,5,3,0
src/main/java/org/apache/commons/math/ode/MainStateJacobianProvider.java,33,3,0/0,0,39/4,1,1/00,0/00,,,0,34,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,361,109,3/7,44,50/1,5,4/00,2/00,0,NordsieckTransformer.{none}(),3,371,5,1/95,1/20,11,25,45,19,10,1,0,0,0,0,24,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,279,80,10/0,47,56/3,1,3/00,22/67,191,AdamsBashforthIntegrator.integrate(),9,233,5,2/78,3/67,8,4,23,18,17,10,0,0,0,0,25,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,122,21,0/0,8,50/8,1,5/00,1/40,52,AdamsIntegrator.updateHighOrderDerivativesPhase2(),1,58,2,1/00,1/00,7,7,7,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,360,111,9/9,56,55/0,2,4/00,11/00,208,AdamsMoultonIntegrator.integrate(),8,257,5,2/77,2/57,10,5,33,26,26,11,0,0,0,0,27,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java,310,85,3/5,43,57/7,1,4/00,15/75,151,AdamsNordsieckTransformer.AdamsNordsieckTransformer(),3,194,4,1/67,2/00,15,7,56,5,2,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,319,109,15/6,38,45/5,1,12/00,6/50,246,AdaptiveStepsizeIntegrator.initializeStep(),9,324,4,1/84,2/67,10,21,56,20,2,0,0,0,0,0,26,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,66,7,0/0,2,48/5,1,1/00,1/00,70,ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(),1,72,2,0/86,1/00,2,4,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,122,39,10/3,2,41/8,1,4/00,7/75,92,ClassicalRungeKuttaStepInterpolator.computeInterpolatedStateAndDerivatives(),6,107,4,2/54,2/25,3,5,9,12,10,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,134,28,3/6,8,44/8,1,4/00,2/75,138,DormandPrince54Integrator.estimateError(),2,147,3,1/46,1/25,3,14,6,5,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,177,87,10/3,13,27/7,1,6/00,9/83,169,DormandPrince54StepInterpolator.computeInterpolatedStateAndDerivatives(),9,175,4,2/21,2/67,5,23,26,15,18,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,236,45,4/4,35,39/4,1,4/00,4/50,252,DormandPrince853Integrator.estimateError(),3,262,3,1/53,1/50,3,24,9,9,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,380,172,12/2,38,24/2,1,9/00,12/11,315,DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(),11,323,5,2/10,3/44,8,55,51,30,26,2,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,306,124,13/7,56,39/5,1,9/00,10/89,191,EmbeddedRungeKuttaIntegrator.integrate(),19,237,7,2/77,3/00,6,20,48,9,17,15,6,3,0,0,29,3,2
src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,63,7,0/0,2,54/0,1,1/00,1/00,68,EulerIntegrator.EulerIntegrator(),1,69,2,0/86,1/00,2,4,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,88,18,22/2,4,47/7,1,4/00,2/50,84,EulerStepInterpolator.computeInterpolatedStateAndDerivatives(),6,88,4,1/83,2/25,3,5,4,4,2,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,63,8,0/0,8,47/6,1,1/00,1/00,70,GillIntegrator.GillIntegrator(),1,71,2,0/75,1/00,3,4,1,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,133,48,8/3,4,39/8,1,4/00,9/25,100,GillStepInterpolator.computeInterpolatedStateAndDerivatives(),6,119,4,2/48,2/25,4,7,11,14,12,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,794,301,6/3,185,34/5,1,8/00,33/00,258,GraggBulirschStoerIntegrator.setStepsizeControl(),13,227,3,2/59,4/29,10,27,39,225,0,0,0,0,0,0,33,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,337,158,19/0,25,32/6,1,10/00,13/10,190,GraggBulirschStoerStepInterpolator.resetTables(),11,285,7,2/72,4/10,9,18,50,41,21,12,4,3,0,0,16,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,115,25,8/0,8,36/5,1,4/00,3/25,111,HighamHall54Integrator.estimateError(),3,120,4,1/72,1/50,3,9,6,6,1,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,106,46,8/7,3,26/4,1,4/00,9/50,71,HighamHall54StepInterpolator.computeInterpolatedStateAndDerivatives(),6,88,4,2/67,2/25,3,5,10,14,14,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,59,7,0/0,2,47/5,1,1/00,1/00,64,MidpointIntegrator.MidpointIntegrator(),1,65,2,0/86,1/00,2,4,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,100,28,14/3,2,44/0,1,4/00,5/00,86,MidpointStepInterpolator.computeInterpolatedStateAndDerivatives(),6,96,4,2/39,2/25,3,5,6,6,8,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/package-info.java,25,1,0/0,0,0/0,0,0/00,0/00,,,0,25,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,152,68,13/2,30,33/6,1,2/00,27/00,93,RungeKuttaIntegrator.integrate(),10,137,6,2/38,5/50,7,7,29,10,9,5,1,0,0,0,26,3,1
src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,175,64,20/3,19,41/7,1,6/00,7/83,175,RungeKuttaStepInterpolator.readExternal(),8,93,4,1/95,3/17,8,9,29,14,4,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,63,7,0/0,2,47/6,1,1/00,1/00,68,ThreeEighthesIntegrator.ThreeEighthesIntegrator(),1,69,2,0/86,1/00,2,4,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,128,42,9/5,2,42/2,1,4/00,8/50,96,ThreeEighthesStepInterpolator.computeInterpolatedStateAndDerivatives(),6,112,4,2/64,2/25,3,5,8,14,12,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/ode/ODEIntegrator.java,141,19,0/0,0,72/3,1,13/00,0/00,,,0,39,1,0/68,0/00,6,13,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/ode/package-info.java,163,1,0/0,0,0/0,0,0/00,0/00,,,0,163,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/ode/ParameterConfiguration.java,57,15,0/0,0,36/8,1,4/00,1/25,41,ParameterConfiguration.setHP(),1,42,2,1/13,1/00,3,7,5,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/Parameterizable.java,37,5,0/0,0,40/5,1,2/00,0/00,,,0,33,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/ode/ParameterizedODE.java,37,4,0/0,0,43/2,1,2/00,0/00,,,0,33,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/ParameterizedWrapper.java,62,22,4/5,5,22/6,1,7/00,1/14,62,ParameterizedWrapper.getParameter(),2,65,3,1/14,1/14,6,8,7,1,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/ode/ParameterJacobianProvider.java,40,4,0/0,0,42/5,1,1/00,0/00,,,0,42,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/ParameterJacobianWrapper.java,77,30,10/0,14,26/0,1,4/00,4/50,46,ParameterJacobianWrapper.ParameterJacobianWrapper(),3,57,4,1/60,1/75,5,7,14,3,1,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,503,222,8/6,74,43/3,1,26/00,6/46,211,AbstractStepInterpolator.writeBaseExternal(),6,231,5,2/01,1/73,6,48,119,38,9,2,0,0,0,0,18,3,0
src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,79,11,0/0,1,58/2,2,2/50,0/40,43,DummyStepHandler.readResolve(),1,50,2,1/09,1/00,2,6,3,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java,64,4,0/0,0,68/8,1,2/00,0/00,,,0,52,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,247,108,19/4,35,34/0,1,10/00,8/30,254,NordsieckStepInterpolator.readExternal(),9,160,4,2/06,3/20,9,16,49,28,6,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/ode/sampling/package-info.java,60,1,0/0,0,0/0,0,0/00,0/00,,,0,60,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java,64,4,0/0,0,67/2,1,2/00,0/00,,,0,53,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java,143,13,0/0,0,79/0,1,10/00,0/00,,,0,53,1,0/77,0/00,3,10,0,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,263,72,9/7,34,55/1,1,9/00,5/56,200,StepNormalizer.handleStep(),8,212,4,1/94,2/00,4,18,31,16,3,0,0,0,0,0,19,3,0
src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerBounds.java,74,12,0/0,4,52/7,1,3/00,1/33,60,StepNormalizerBounds.lastIncluded(),1,61,2,1/17,1/00,2,6,4,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerMode.java,66,3,0/0,0,68/2,1,0/00,0/00,,,0,69,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/ode/SecondaryEquations.java,51,4,0/0,0,56/9,1,2/00,0/00,,,0,44,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,2,3,0
src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java,57,4,0/0,0,64/9,1,2/00,0/00,,,0,53,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,54,5,0/0,0,53/7,1,1/00,0/00,,,0,59,1,0/20,0/00,4,1,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java,81,18,0/0,1,46/9,1,4/00,1/50,52,AbstractConvergenceChecker<PAIR>.getAbsoluteThreshold(),1,53,2,1/17,1/00,3,9,6,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,174,61,13/1,14,42/0,2,4/00,4/75,137,BaseMultiStartMultivariateRealOptimizer<FUNC extends MultivariateFunction>.optimize(),5,180,5,1/94,2/50,10,14,20,8,8,2,0,0,0,0,18,3,0
src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,185,69,14/5,14,40/0,2,4/50,5/00,138,BaseMultiStartMultivariateVectorialOptimizer<FUNC extends MultivariateVectorFunction>.optimize(),6,186,5,2/11,2/67,11,14,20,10,11,4,0,0,0,0,15,3,0
src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,54,4,0/0,0,57/4,1,1/00,0/00,,,0,56,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,22,3,0
src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,56,4,0/0,0,58/9,1,1/00,0/00,,,0,58,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,56,5,0/0,0,60/7,1,3/00,0/00,,,0,42,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/optimization/BaseSimpleBoundsMultivariateRealOptimizer.java,61,4,0/0,0,60/7,1,1/00,0/00,,,0,63,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java,43,3,0/0,0,53/5,1,1/00,0/00,,,0,44,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,33,3,0/0,0,39/4,1,0/00,0/00,,,0,18,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,28,3,0/0,0,28/6,1,0/00,0/00,,,0,18,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,318,84,2/4,65,45/9,1,3/00,21/67,63,AbstractSimplex.AbstractSimplex(),1,98,3,1/64,1/00,13,6,63,2,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,134,51,7/8,18,38/1,1,9/00,2/67,102,BaseAbstractScalarOptimizer<FUNC extends MultivariateFunction>.optimize(),4,94,3,1/33,1/44,12,15,19,5,0,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractSimpleBoundsScalarOptimizer.java,129,53,26/4,13,27/9,1,6/00,5/67,89,BaseAbstractSimpleBoundsScalarOptimizer<FUNC extends MultivariateFunction>.optimize(),15,102,5,2/11,3/33,11,8,12,10,10,2,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,149,59,10/2,22,36/9,1,10/00,3/00,104,BaseAbstractVectorialOptimizer<FUNC extends MultivariateVectorFunction>.optimize(),6,96,3,1/42,1/60,12,17,23,7,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,2286,1278,27/6,772,29/4,2,7/50,80/60,374,BOBYQAOptimizer.bobyqb(),135,451,9+,5/44,22/47,15,54,176,100,118,76,215,217,176,131,35,3,0
src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1270,554,17/9,387,36/5,3,13/67,10/54,359,CMAESOptimizer.doOptimize(),34,389,6,2/53,3/75,23,83,177,152,94,21,5,0,0,0,31,3,0
src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,195,54,7/4,26,50/8,1,10/00,3/50,155,MultiDirectionalSimplex.evaluateNewSimplex(),3,171,4,1/78,1/40,5,14,25,8,2,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapter.java,252,81,14/8,26,48/8,6,3/00,2/28,0,Mapper.{none}(),13,120,5,2/09,2/41,11,11,32,18,5,4,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapter.java,171,44,22/7,11,57/3,1,2/00,14/50,162,MultivariateFunctionPenaltyAdapter.value(),8,171,6,2/36,6/50,8,7,13,4,4,5,3,0,0,0,4,3,0
src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,259,94,19/1,47,42/1,1,9/00,8/00,187,NelderMeadSimplex.iterate(),20,245,5,2/41,3/11,5,17,35,15,15,7,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/optimization/direct/package-info.java,24,1,0/0,0,0/0,0,0/00,0/00,,,0,24,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,259,108,1/9,62,32/8,2,1/50,28/67,79,PowellOptimizer.PowellOptimizer(),3,85,3,1/75,2/00,15,8,75,11,0,0,0,0,0,0,27,3,0
src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,163,49,10/2,22,48/5,3,2/33,4/71,126,SimplexOptimizer.doOptimize(),6,162,5,2/04,1/71,10,8,16,7,7,3,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,185,53,5/7,28,50/3,2,5/50,2/55,144,TheoreticalValuesFunction.jacobian(),2,186,4,1/51,1/20,10,16,18,8,1,0,0,0,0,0,20,3,0
src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,315,112,17/9,67,40/0,4,2/50,7/80,221,ParameterGuesser.getInterpolationPointsForY(),4,91,5,2/26,2/56,17,18,25,29,22,3,0,0,0,0,16,3,1
src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,332,92,0/0,49,55/4,1,2/00,6/00,44,HarmonicFitter.fit(),1,45,2,1/04,1/00,8,72,12,0,0,0,0,0,0,0,18,3,0
src/main/java/org/apache/commons/math/optimization/fitting/package-info.java,30,1,0/0,0,0/0,0,0/00,0/00,,,0,30,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java,52,10,0/0,3,44/2,1,2/00,1/50,43,PolynomialFitter.PolynomialFitter(),1,44,2,0/90,1/00,4,3,3,0,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java,62,17,0/0,0,38/7,1,4/00,1/50,47,WeightedObservedPoint.getY(),1,48,2,1/18,1/00,3,8,6,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,245,88,5/7,40,44/1,1,9/00,5/89,109,AbstractLeastSquaresOptimizer.updateJacobian(),4,123,4,1/55,1/63,15,20,44,8,1,0,0,0,0,0,46,3,1
src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,74,18,0/0,4,40/5,1,4/00,1/00,50,AbstractScalarDifferentiableOptimizer.optimize(),1,55,2,0/72,1/00,9,5,4,0,0,0,0,0,0,0,34,3,0
src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java,44,2,0/0,0,52/3,1,0/00,0/00,,,0,18,0,0/00,0/00,2,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,149,59,1/7,29,34/2,1,5/00,7/80,57,GaussNewtonOptimizer.GaussNewtonOptimizer(),1,107,3,1/93,1/00,14,6,9,30,0,0,0,0,0,0,28,3,0
src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,840,378,23/3,67,39/0,1,10/00,34/60,272,LevenbergMarquardtOptimizer.doOptimize(),41,351,7,3/43,11/00,9,23,66,93,97,67,21,2,0,0,35,3,2
src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,280,113,19/5,31,36/8,3,3/33,8/30,146,NonLinearConjugateGradientOptimizer.doOptimize(),18,179,5,2/35,3/30,12,14,32,37,14,4,0,0,0,0,32,3,0
src/main/java/org/apache/commons/math/optimization/general/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java,43,3,0/0,0,53/5,1,1/00,0/00,,,0,44,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/optimization/GoalType.java,29,3,0/0,0,24/1,1,0/00,0/00,,,0,18,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,167,47,21/3,12,52/7,1,4/00,8/25,152,LeastSquaresConverter.value(),9,166,4,1/89,3/50,6,8,22,7,4,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,107,33,3/0,4,42/1,1,6/00,2/00,96,AbstractLinearOptimizer.incrementIterationsCounter(),2,99,3,1/18,1/17,7,14,11,1,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,210,51,5/9,14,54/3,1,11/00,2/45,189,LinearConstraint.equals(),5,129,3,1/43,1/45,9,15,23,4,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,126,32,0/0,19,42/1,1,5/00,1/00,57,LinearObjectiveFunction.getValue(),1,58,2,0/88,1/00,9,18,5,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,80,10,0/0,0,63/7,1,4/00,0/00,,,0,58,1,0/40,0/00,6,4,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,35,7,0/0,1,28/6,1,1/00,1/00,37,NoFeasibleSolutionException.NoFeasibleSolutionException(),1,38,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/optimization/linear/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/linear/Relationship.java,57,16,43/8,3,29/8,1,3/00,3/00,56,Relationship.oppositeRelationship(),2,59,4,2/06,1/33,2,5,2,4,3,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,172,76,23/7,47,28/5,1,7/00,8/29,88,SimplexSolver.getPivotRow(),11,120,6,2/41,3/71,7,11,28,13,9,7,1,0,0,0,15,3,1
src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,555,212,18/4,167,38/9,1,31/00,4/71,178,SimplexTableau.createTableau(),12,356,5,2/00,2/68,18,44,89,42,18,1,0,0,0,0,25,3,4
src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,35,7,0/0,1,28/6,1,1/00,1/00,37,UnboundedSolutionException.UnboundedSolutionException(),1,38,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,48,6,0/0,1,41/7,1,1/00,1/00,46,MultiStartDifferentiableMultivariateRealOptimizer.MultiStartDifferentiableMultivariateRealOptimizer(),1,49,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,49,6,0/0,1,40/8,1,1/00,1/00,46,MultiStartDifferentiableMultivariateVectorialOptimizer.MultiStartDifferentiableMultivariateVectorialOptimizer(),1,50,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,48,6,0/0,1,41/7,1,1/00,1/00,46,MultiStartMultivariateRealOptimizer.MultiStartMultivariateRealOptimizer(),1,49,2,0/50,1/00,4,1,1,0,0,0,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java,31,3,0/0,0,35/5,1,0/00,0/00,,,0,18,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/package-info.java,72,1,0/0,0,0/0,0,0/00,0/00,,,0,72,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,77,18,0/0,3,44/2,1,5/00,1/40,44,RealPointValuePair.getValue(),1,45,2,1/22,1/00,3,8,7,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,82,15,13/3,9,48/8,1,3/00,3/00,72,SimpleRealPointChecker.converged(),4,82,4,1/73,2/00,3,3,5,3,1,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,77,12,0/0,9,51/9,1,3/00,2/00,72,SimpleScalarValueChecker.converged(),2,52,2,1/25,1/33,3,3,6,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,84,16,12/5,9,48/8,1,3/00,3/67,71,SimpleVectorialPointChecker.converged(),4,83,4,2/00,2/00,2,3,5,5,1,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,85,17,11/8,9,48/2,1,3/00,3/67,73,SimpleVectorialValueChecker.converged(),4,85,4,1/88,2/00,3,3,5,5,1,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,147,54,5/6,14,37/4,1,11/00,2/36,112,AbstractUnivariateRealOptimizer.optimize(),3,104,3,1/39,1/27,9,19,22,4,0,0,0,0,0,0,26,3,0
src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,81,7,0/0,0,65/4,1,2/00,0/00,,,0,59,1,0/29,0/00,5,2,0,0,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java,260,117,11/1,22,36/2,1,12/00,7/25,112,BracketFinder.search(),11,150,5,2/45,2/08,8,22,31,33,11,12,0,0,0,0,13,3,0
src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,249,132,27/3,25,26/5,1,3/00,39/00,108,BrentOptimizer.doOptimize(),41,183,8,3/80,15/00,8,7,28,14,16,30,23,4,2,0,28,3,1
src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,183,65,12/3,15,41/0,2,4/50,4/33,72,MultiStartUnivariateRealOptimizer<FUNC extends UnivariateFunction>.optimize(),4,190,5,1/89,2/22,12,15,20,8,9,2,0,0,0,0,16,3,1
src/main/java/org/apache/commons/math/optimization/univariate/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java,26,3,0/0,0,23/1,1,0/00,0/00,,,0,17,0,0/00,0/00,3,0,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java,61,13,0/0,0,44/3,1,3/00,1/33,44,UnivariateRealPointValuePair.getValue(),1,46,2,1/08,1/00,3,6,4,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java,50,3,0/0,0,60/0,1,1/00,0/00,,,0,53,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java,87,20,0/0,6,44/8,1,6/00,1/33,46,VectorialPointValuePair.getValueRef(),1,47,2,1/25,1/00,3,9,8,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,254,58,15/5,17,62/6,1,11/00,3/64,106,AbstractRandomGenerator.nextBytes(),5,112,5,2/02,1/82,4,14,24,11,3,2,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/AbstractWell.java,155,49,8/2,18,49/7,1,7/00,4/29,153,AbstractWell.setSeed(),4,164,4,1/80,1/57,3,16,20,8,2,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,138,64,10/9,23,32/6,1,9/00,5/11,137,BitsStreamGenerator.nextInt(),4,140,4,2/09,1/78,4,14,21,22,3,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,164,42,11/9,17,53/7,1,6/00,4/50,165,CorrelatedRandomVectorGenerator.nextVector(),4,177,4,1/69,1/83,5,10,21,5,1,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,121,18,0/0,0,71/1,1,9/00,0/00,,,0,59,1,0/50,0/00,9,9,0,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,494,185,11/4,96,46/2,5,5/20,4/62,433,EmpiricalDistributionImpl.getNextValue(),7,449,6,2/12,1/81,20,34,64,47,18,2,2,0,0,0,21,3,0
src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,40,7,0/0,1,35/0,1,2/00,1/00,36,GaussianRandomGenerator.nextNormalizedDouble(),1,37,2,1/00,1/00,2,3,2,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/random/ISAACRandom.java,248,146,6/8,32,23/0,1,14/00,8/07,202,ISAACRandom.initState(),5,143,4,1/98,1/71,3,30,82,29,2,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java,43,12,8/3,2,25/6,1,2/00,3/00,39,JDKRandomGenerator.setSeed(),2,45,3,1/33,1/50,3,3,5,1,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/random/MersenneTwister.java,221,82,12/2,16,51/1,1,8/00,8/00,163,MersenneTwister.setSeed(),7,181,4,2/34,2/25,4,14,27,24,13,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java,34,3,0/0,0,41/2,1,1/00,0/00,,,0,36,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/random/package-info.java,132,1,0/0,0,0/0,0,0/00,0/00,,,0,132,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/random/RandomAdaptor.java,179,37,8/1,12,58/1,1,14/00,1/21,177,RandomAdaptor.setSeed(),2,179,3,1/46,1/21,3,17,14,3,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/random/RandomData.java,259,15,0/0,0,87/6,1,12/00,0/00,,,0,42,1,0/80,0/00,3,12,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/random/RandomDataImpl.java,1007,283,13/1,199,54/8,1,13/00,17/69,400,RandomDataImpl.nextPoisson(),19,459,6,2/32,4/17,27,17,139,61,21,14,4,0,0,0,56,3,0
src/main/java/org/apache/commons/math/random/RandomGenerator.java,135,13,0/0,0,77/8,1,11/00,0/00,,,0,37,1,0/85,0/00,2,11,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java,29,3,0/0,0,31/0,1,1/00,0/00,,,0,33,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/random/StableRandomGenerator.java,118,47,27/7,25,28/8,1,2/00,17/50,55,StableRandomGenerator.nextNormalizedDouble(),9,125,5,2/26,9/00,6,6,15,11,8,1,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,78,23,8/7,8,37/2,1,3/00,4/33,53,UncorrelatedRandomVectorGenerator.nextVector(),2,57,3,1/48,1/67,4,6,11,2,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,49,9,0/0,2,42/9,1,2/00,1/00,45,UniformRandomGenerator.nextNormalizedDouble(),1,46,2,0/89,1/00,3,4,2,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java,71,24,12/5,5,32/4,1,3/00,5/33,61,UnitSphereRandomVectorGenerator.nextVector(),4,69,4,1/92,2/00,3,5,10,3,3,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/random/ValueServer.java,379,110,21/8,38,57/0,1,25/00,2/52,378,ValueServer.getNextReplay(),4,117,4,1/85,1/44,9,38,34,19,10,0,0,0,0,0,15,3,0
src/main/java/org/apache/commons/math/random/Well1024a.java,85,30,0/0,4,41/2,1,5/00,3/60,56,Well1024a.next(),1,57,2,1/53,1/00,2,10,18,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/Well19937a.java,87,32,0/0,4,40/2,1,5/00,4/00,56,Well19937a.next(),1,57,2,1/56,1/00,2,10,20,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/Well19937c.java,91,34,0/0,4,40/7,1,5/00,4/40,56,Well19937c.next(),1,57,2,1/59,1/00,2,10,22,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/Well44497a.java,90,34,0/0,4,40/0,1,5/00,4/40,56,Well44497a.next(),1,57,2,1/59,1/00,2,10,22,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/Well44497b.java,96,36,0/0,4,41/7,1,5/00,4/80,56,Well44497b.next(),1,57,2,1/61,1/00,2,10,24,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/random/Well512a.java,85,29,0/0,4,42/4,1,5/00,3/40,56,Well512a.next(),1,57,2,1/52,1/00,2,10,17,0,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/special/Beta.java,192,44,15/9,19,50/5,2,4/50,3/56,115,Beta.regularizedBeta(),12,138,6,2/62,3/00,4,9,13,7,2,6,4,0,0,0,8,3,0
src/main/java/org/apache/commons/math/special/Erf.java,121,19,15/8,13,59/5,1,4/00,2/75,115,Erf.erf(),3,68,3,1/58,2/00,3,5,8,3,0,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/special/Gamma.java,301,84,22/6,25,52/2,2,5/00,6/50,147,Gamma.regularizedGammaP(),14,245,5,2/34,4/00,5,15,24,30,9,2,0,0,0,0,14,3,1
src/main/java/org/apache/commons/math/special/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/clustering/Cluster.java,63,17,0/0,2,39/7,1,4/00,1/25,45,Cluster<T extends Clusterable<T>>.getCenter(),1,46,2,1/00,1/00,5,7,5,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java,40,5,0/0,0,45/0,1,2/00,0/00,,,0,36,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,106,45,22/2,15,22/6,1,7/00,4/43,76,EuclideanIntegerPoint.equals(),5,65,4,1/89,2/43,5,9,20,8,3,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,419,182,29/1,82,35/8,2,4/00,13/50,250,KMeansPlusPlusClusterer<T extends Clusterable<T>>.chooseInitialCenters(),18,352,8,3/11,5/13,13,11,54,38,29,17,9,10,1,0,18,3,1
src/main/java/org/apache/commons/math/stat/clustering/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,255,60,3/3,39,56/9,1,10/00,4/00,160,Covariance.computeCovarianceMatrix(),3,166,4,1/67,1/22,8,12,35,2,3,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/correlation/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,265,82,1/2,70,46/8,1,7/00,8/71,94,PearsonsCorrelation.PearsonsCorrelation(),2,97,3,1/61,1/17,12,9,60,1,0,0,0,0,0,0,15,3,1
src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,156,38,0/0,27,52/6,1,7/00,2/86,59,SpearmansCorrelation.computeCorrelationMatrix(),1,60,2,1/32,1/00,8,10,20,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/stat/correlation/StorelessBivariateCovariance.java,62,30,10/0,1,11/3,1,5/00,2/80,65,StorelessBivariateCovariance.getResult(),4,68,3,1/43,1/60,4,12,11,3,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/correlation/StorelessCovariance.java,104,49,14/3,16,13/5,1,9/00,3/22,74,StorelessCovariance.incrementRow(),4,57,4,1/65,1/88,7,13,22,4,3,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,171,37,18/9,24,56/1,1,6/00,3/50,162,AbstractStorelessUnivariateStatistic.equals(),4,149,4,1/68,2/33,6,10,12,8,1,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,261,59,22/0,24,58/6,1,10/00,3/80,256,AbstractUnivariateStatistic.test(),10,269,4,1/85,2/50,8,13,22,12,4,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,383,104,9/6,53,53/5,2,10/00,3/55,301,AggregateSummaryStatistics.aggregate(),11,319,4,2/13,1/70,5,21,39,35,5,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,668,152,3/3,169,55/4,1,11/00,3/55,161,DescriptiveStatistics.addValue(),5,164,4,0/74,1/45,87,26,33,4,2,0,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,149,48,2/1,8,46/3,1,8/00,3/63,101,FirstMoment.increment(),2,103,3,1/50,1/13,6,13,28,1,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,132,38,2/6,10,47/7,1,7/00,3/43,87,FourthMoment.increment(),2,89,3,1/61,1/14,5,9,20,4,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,190,50,6/0,23,51/1,1,13/00,1/85,110,GeometricMean.getResult(),3,112,3,1/32,1/23,11,15,21,3,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,202,68,13/2,23,43/6,1,10/00,4/60,110,Kurtosis.getResult(),5,115,4,1/93,2/10,9,13,24,18,4,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,254,61,9/8,20,59/1,1,12/00,3/17,156,Mean.evaluate(),3,167,4,1/79,1/50,8,15,22,14,2,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,117,32,3/1,9,47/0,1,7/00,2/57,79,SecondMoment.increment(),2,81,3,1/44,1/14,5,9,17,1,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,340,80,11/2,21,62/1,2,9/50,2/42,277,SemiVariance.evaluate(),9,293,6,2/00,1/47,7,23,32,6,7,3,2,0,0,0,11,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,195,65,12/3,19,45/1,1,10/00,4/50,153,Skewness.evaluate(),5,170,4,2/00,1/90,7,13,23,17,5,0,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,252,48,0/0,27,63/9,1,17/00,1/29,56,StandardDeviation.copy(),1,57,2,1/31,1/00,7,19,22,0,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,129,38,2/6,9,47/3,1,7/00,3/29,88,ThirdMoment.increment(),2,90,3,1/50,1/14,5,10,22,1,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,582,131,20/6,30,66/2,1,21/00,4/67,501,Variance.evaluate(),8,412,5,2/48,2/29,8,25,43,17,27,11,0,0,0,0,22,3,1
src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,138,67,17/9,12,23/9,1,7/00,6/86,135,VectorialCovariance.equals(),7,93,5,1/99,2/71,7,12,31,12,2,3,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,94,37,18/9,9,26/6,1,6/00,4/00,92,VectorialMean.equals(),4,43,3,1/70,2/17,5,8,17,7,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,574,188,7/4,143,53/0,1,36/00,3/36,369,MultivariateSummaryStatistics.equals(),11,253,4,1/73,1/61,20,47,86,33,2,0,0,0,0,0,20,3,0
src/main/java/org/apache/commons/math/stat/descriptive/package-info.java,44,1,0/0,0,0/0,0,0/00,0/00,,,0,44,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,153,43,9/3,10,48/4,1,9/00,2/78,129,Max.evaluate(),4,135,5,1/63,1/56,6,12,20,3,1,1,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java,48,8,0/0,2,43/8,1,2/00,1/00,41,Median.Median(),1,42,2,0/88,1/00,3,3,2,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,153,43,9/3,10,48/4,1,9/00,2/78,129,Min.evaluate(),4,135,5,1/63,1/56,6,12,20,3,1,1,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/stat/descriptive/rank/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,455,155,21/3,40,52/5,1,17/00,7/24,256,Percentile.partition(),9,326,5,2/23,3/35,10,22,66,37,19,1,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java,106,14,0/0,0,70/8,1,11/00,0/00,,,0,33,1,0/79,0/00,3,11,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java,62,9,0/0,0,58/1,1,7/00,0/00,,,0,31,1,0/78,0/00,2,7,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java,165,62,3/2,64,37/6,1,11/00,3/45,133,StatisticalSummaryValues.equals(),8,135,3,1/55,1/64,6,18,36,2,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,77,9,0/0,0,66/2,1,7/00,0/00,,,0,36,1,0/78,0/00,2,7,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/descriptive/summary/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,207,52,7/7,11,56/0,1,11/00,2/73,120,Product.evaluate(),3,125,4,1/58,1/36,8,14,24,4,2,0,0,0,0,0,15,3,0
src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,203,50,8/0,10,56/2,1,11/00,2/73,119,Sum.evaluate(),3,124,4,1/64,1/36,6,14,24,4,2,0,0,0,0,0,15,3,0
src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,152,42,4/8,10,50/0,1,9/00,2/56,130,SumOfLogs.evaluate(),3,135,4,1/48,1/22,7,12,20,2,1,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,140,41,4/9,8,46/4,1,9/00,2/56,118,SumOfSquares.evaluate(),3,123,4,1/51,1/22,6,12,20,2,1,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,677,235,14/0,169,51/7,1,39/00,4/08,668,SummaryStatistics.copy(),23,219,4,1/75,2/03,18,58,125,32,2,0,0,0,0,0,20,3,1
src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,160,41,0/0,18,44/4,1,15/00,1/40,43,SynchronizedDescriptiveStatistics.copy(),1,174,4,1/49,1/00,4,16,19,1,1,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,255,66,0/0,31,43/1,1,31/00,1/00,46,SynchronizedMultivariateSummaryStatistics.setMeanImpl(),1,47,2,1/42,1/00,3,32,31,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,307,83,0/0,39,43/3,1,36/00,1/17,43,SynchronizedSummaryStatistics.copy(),1,342,4,1/49,1/00,4,37,40,1,1,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,47,5,0/0,0,53/2,1,3/00,0/00,,,0,33,1,0/60,0/00,2,3,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java,45,4,0/0,0,53/3,1,2/00,0/00,,,0,35,1,0/50,0/00,2,2,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/Frequency.java,466,156,16/7,102,51/3,2,15/00,3/70,314,Frequency.getCumFreq(),11,118,4,1/99,1/87,9,33,71,36,7,0,0,0,0,0,22,3,3
src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,213,9,0/0,0,85/0,1,6/00,0/00,,,0,55,1,0/67,0/00,3,6,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,368,145,24/8,42,36/1,1,15/00,7/93,207,ChiSquareTestImpl.chiSquareDataSetsComparison(),13,253,5,2/26,3/67,11,15,69,28,19,3,0,0,0,0,20,3,1
src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java,88,5,0/0,0,72/7,1,2/00,0/00,,,0,59,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java,164,49,10/2,19,47/0,1,7/00,4/71,69,MannWhitneyUTestImpl.ensureDataConformance(),5,72,3,1/61,1/71,8,8,28,5,0,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java,97,7,0/0,0,72/2,1,3/00,0/00,,,0,55,1,0/43,0/00,4,3,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,184,62,9/7,26,44/0,2,3/00,7/17,122,OneWayAnovaImpl.anovaStats(),6,137,4,2/08,2/17,9,6,26,13,8,0,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/stat/inference/package-info.java,23,1,0/0,0,0/0,0,0/00,0/00,,,0,23,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,292,75,0/0,37,42/5,1,33/00,1/00,48,TestUtils.oneWayAnovaTest(),1,49,2,1/37,1/00,5,37,33,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/stat/inference/TTest.java,769,24,0/0,0,88/8,1,20/00,0/00,,,0,69,1,0/83,0/00,4,20,0,0,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1008,118,4/2,125,76/5,1,30/00,2/57,1002,TTestImpl.checkSampleData(),3,1005,3,1/60,1/20,11,30,72,5,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,138,6,0/0,0,81/2,1,3/00,0/00,,,0,65,1,0/50,0/00,3,3,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java,103,5,0/0,0,75/7,1,2/00,0/00,,,0,64,1,0/40,0/00,3,2,0,0,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java,227,76,22/4,24,43/6,1,9/00,6/44,68,WilcoxonSignedRankTestImpl.wilcoxonSignedRankTest(),5,197,5,1/99,3/00,8,10,38,16,3,1,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/stat/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java,43,2,0/0,0,46/5,1,0/00,0/00,,,0,18,0,0/00,0/00,2,0,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,422,171,27/5,84,47/2,2,10/00,6/60,190,NaturalRanking.rank(),9,232,5,2/43,2/25,11,22,65,33,36,4,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/stat/ranking/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java,39,3,0/0,0,48/7,1,1/00,0/00,,,0,40,1,0/33,0/00,2,1,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java,48,2,0/0,0,50/0,1,0/00,0/00,,,0,18,0,0/00,0/00,2,0,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,339,103,19/4,50,48/7,1,17/00,4/18,204,AbstractMultipleLinearRegression.validateSampleData(),8,181,5,1/92,2/47,10,22,44,21,5,1,0,0,0,0,19,3,0
src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,123,35,2/9,32,49/6,1,6/00,3/50,79,GLSMultipleLinearRegression.getOmegaInverse(),2,81,3,1/46,1/17,6,8,20,1,0,0,0,0,0,0,8,3,0
src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1081,627,23/4,107,24/1,1,24/00,24/00,1032,MillerUpdatingRegression.regress(),24,546,8,3/00,7/54,7,44,238,151,75,70,34,7,1,0,9,3,0
src/main/java/org/apache/commons/math/stat/regression/ModelSpecificationException.java,38,6,0/0,2,31/6,1,0/00,0/00,,,0,39,2,0/50,0/00,4,1,1,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java,63,7,0/0,0,61/9,1,5/00,0/00,,,0,40,1,0/71,0/00,2,5,0,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,217,56,14/3,43,57/1,1,10/00,3/60,99,OLSMultipleLinearRegression.calculateHat(),6,109,5,1/75,1/90,9,11,27,5,2,2,0,0,0,0,16,3,0
src/main/java/org/apache/commons/math/stat/regression/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,399,127,22/0,18,50/6,1,17/00,5/18,400,RegressionResults.getVcvElement(),10,405,5,2/07,3/00,6,33,51,25,7,5,0,0,0,0,10,3,0
src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,792,237,20/7,68,55/2,1,31/00,5/97,775,SimpleRegression.regress(),20,817,6,2/61,2/90,11,41,73,41,52,13,6,0,0,0,20,3,1
src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,79,9,0/0,0,67/1,1,7/00,0/00,,,0,35,1,0/78,0/00,2,7,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/stat/StatUtils.java,734,117,6/8,50,74/4,1,31/00,1/87,690,StatUtils.varianceDifference(),4,693,3,1/43,1/26,18,41,48,10,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,236,61,6/6,30,55/9,1,10/00,4/40,213,FastCosineTransformer.fct(),5,222,3,1/80,1/40,7,10,32,12,0,0,0,0,0,0,37,3,0
src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,796,289,17/6,140,44/0,3,12/00,6/44,335,FastFourierTransformer.fft(),12,747,6,2/62,2/64,9,28,95,104,40,13,1,0,0,0,42,3,0
src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,291,52,15/4,17,67/0,1,7/00,5/71,219,FastHadamardTransformer.fht(),5,249,4,2/21,2/14,5,7,20,12,8,0,0,0,0,0,23,3,0
src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,219,60,6/7,28,54/8,1,10/00,4/30,204,FastSineTransformer.fst(),5,212,3,1/75,1/40,7,10,34,9,0,0,0,0,0,0,32,3,0
src/main/java/org/apache/commons/math/transform/package-info.java,22,1,0/0,0,0/0,0,0/00,0/00,,,0,22,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/transform/RealTransformer.java,70,7,0/0,0,60/0,1,4/00,0/00,,,0,42,1,0/57,0/00,3,4,0,0,0,0,0,0,0,0,17,3,0
src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,889,311,33/4,77,50/7,1,26/00,10/58,382,ArithmeticUtils.mulAndCheck(),15,633,6,2/58,5/73,9,27,127,96,34,12,6,0,0,0,6,3,0
src/main/java/org/apache/commons/math/util/BigReal.java,261,79,0/0,45,45/6,1,28/00,1/29,61,BigReal.multiply(),1,62,2,1/34,1/00,9,34,36,0,0,0,0,0,0,0,12,3,0
src/main/java/org/apache/commons/math/util/BigRealField.java,71,19,0/0,1,39/4,2,3/00,0/83,41,BigRealField.readResolve(),1,48,2,1/05,1/00,5,8,6,0,0,0,0,0,0,0,7,3,0
src/main/java/org/apache/commons/math/util/CompositeFormat.java,199,70,15/7,43,41/2,1,9/00,6/11,79,CompositeFormat.parseNextCharacter(),5,88,4,2/09,2/67,6,9,34,15,6,0,0,0,0,0,11,3,0
src/main/java/org/apache/commons/math/util/ContinuedFraction.java,185,64,15/6,20,46/5,1,5/00,10/20,124,ContinuedFraction.evaluate(),14,158,6,2/84,3/60,5,8,14,17,9,7,4,0,0,0,12,3,0
src/main/java/org/apache/commons/math/util/DefaultTransformer.java,71,24,20/8,7,26/8,1,3/00,4/67,46,DefaultTransformer.transform(),4,48,3,1/58,2/67,6,4,8,6,0,0,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/util/DoubleArray.java,100,10,0/0,0,73/0,1,8/00,0/00,,,0,35,1,0/80,0/00,2,8,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/util/FastMath.java,3214,1537,13/4,323,34/4,1,36/00,40/44,1419,FastMath.pow(),42,831,5,2/68,6/97,3,78,534,746,148,28,0,0,0,0,125,3,1
src/main/java/org/apache/commons/math/util/FastMathCalc.java,563,296,10/8,103,34/8,1,17/00,15/82,102,FastMathCalc.buildSinCosTables(),6,130,4,2/51,3/00,4,23,129,98,42,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/util/FastMathLiteralArrays.java,6166,18,0/0,1,17/4,1,6/00,0/83,6134,FastMathLiteralArrays.loadLnMant(),1,6142,2,1/17,1/00,2,11,5,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/util/FastMathResources.java,260,114,7/0,69,31/9,1,8/00,5/13,65,FastMathResources.createAll(),9,70,4,1/20,2/00,42,31,23,12,6,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/util/Incrementor.java,161,34,5/9,4,58/4,3,4/00,1/33,0,MaxCountExceededCallback.{none}(),3,65,4,1/54,1/33,3,15,13,3,1,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/util/IterationEvent.java,37,6,0/0,1,35/1,1,1/00,1/00,37,IterationEvent.IterationEvent(),1,38,2,0/67,1/00,3,2,1,0,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/util/IterationListener.java,53,7,0/0,0,54/7,1,4/00,0/00,,,0,34,1,0/57,0/00,3,4,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/util/IterationManager.java,143,35,11/4,13,52/4,1,11/00,1/55,66,IterationManager.fireTerminationEvent(),2,68,3,1/46,1/36,5,13,13,4,0,0,0,0,0,0,4,3,0
src/main/java/org/apache/commons/math/util/MathArrays.java,996,403,25/8,70,44/9,3,9/00,12/48,362,MathArrays.safeNorm(),18,170,7,2/74,4/11,13,28,204,69,30,28,22,10,0,0,6,3,0
src/main/java/org/apache/commons/math/util/MathUtils.java,244,60,28/3,19,57/4,1,12/00,3/08,127,MathUtils.copySign(),8,228,4,1/83,3/83,8,13,21,17,1,0,0,0,0,0,110,3,6
src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java,270,88,17/0,20,47/8,2,6/50,2/92,215,MultidimensionalCounter.getCounts(),5,94,5,2/31,1/77,5,12,35,26,7,3,0,0,0,0,17,3,1
src/main/java/org/apache/commons/math/util/NumberTransformer.java,36,4,0/0,0,41/7,1,1/00,0/00,,,0,38,1,0/25,0/00,3,1,0,0,0,0,0,0,0,0,5,3,0
src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,506,229,16/6,59,37/2,2,14/50,6/00,267,OpenIntToDoubleHashMap.findInsertionIndex(),14,575,5,2/20,2/48,7,40,108,49,24,1,0,0,0,0,14,3,0
src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,528,240,15/8,63,37/7,2,15/00,5/90,282,OpenIntToFieldHashMap<T extends FieldElement<T>>.findInsertionIndex(),14,590,5,2/14,2/43,12,43,111,49,24,1,0,0,0,0,15,3,0
src/main/java/org/apache/commons/math/util/package-info.java,20,1,0/0,0,0/0,0,0/00,0/00,,,0,20,0,0/00,0/00,1,0,0,0,0,0,0,0,0,0,3,3,0
src/main/java/org/apache/commons/math/util/Pair.java,103,24,12/5,10,44/7,1,6/00,2/33,83,"Pair<K, V>.equals()",5,85,3,1/67,1/67,2,8,10,4,0,0,0,0,0,0,9,3,0
src/main/java/org/apache/commons/math/util/Precision.java,465,87,4/6,101,53/5,1,7/00,9/86,64,Precision.equalsIncludingNaN(),3,66,3,1/76,2/17,7,11,65,4,0,0,0,0,0,0,6,3,0
src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,850,232,14/7,74,59/1,1,39/00,4/49,495,ResizableDoubleArray.discardExtremeElements(),6,898,5,2/09,1/90,8,49,113,40,20,2,0,0,0,0,28,3,0
src/main/java/org/apache/commons/math/util/TransformerMap.java,168,58,17/2,25,41/7,1,12/00,2/92,157,TransformerMap.equals(),7,171,5,1/83,1/92,8,15,20,10,4,1,0,0,0,0,7,3,0
src/site/resources/userguide/TrajectoryDeterminationProblem.java,155,99,11/1,47,1/9,3,5/33,4/06,126,AngularMeasurement.getPartial(),5,40,4,2/25,1/69,7,17,29,36,10,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/analysis/Expm1Function.java,35,8,0/0,4,14/3,1,2/00,1/00,28,Expm1Function.derivative(),1,29,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/analysis/function/GaussianTest.java,131,90,0/0,77,2/3,1,14/00,4/00,36,GaussianTest.testParametricValue(),1,37,2,1/34,1/00,12,35,43,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/analysis/function/HarmonicOscillatorTest.java,101,67,3/0,39,3/0,1,8/00,5/38,35,HarmonicOscillatorTest.testDerivative(),2,43,3,1/34,1/29,11,26,26,4,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/analysis/function/LogisticTest.java,160,116,1/7,54,2/5,1,14/00,5/86,46,LogisticTest.testCompareDerivativeSigmoid(),2,55,3,1/42,1/17,11,49,52,4,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,144,101,1/0,84,2/8,1,14/00,4/79,36,LogitTest.testParametricValue(),1,37,2,1/32,1/00,13,43,45,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/analysis/function/SigmoidTest.java,84,52,0/0,50,3/6,1,8/00,3/63,34,SigmoidTest.testParametricValue(),1,35,2,1/38,1/00,9,14,29,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/analysis/function/SincTest.java,82,47,8/5,26,0/0,3,2/67,4/38,27,SincTest.testDerivativeShortcut(),2,31,4,1/90,1/50,6,8,22,11,2,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/analysis/function/SqrtTest.java,50,25,8/0,11,0/0,3,1/33,4/50,26,SqrtTest.testDerivativeComparison(),2,30,4,1/93,1/50,5,4,8,8,2,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/analysis/function/StepFunctionTest.java,100,65,4/6,59,3/0,1,9/00,4/44,83,StepFunctionTest.testEndpointBehavior(),4,96,4,1/58,1/33,9,16,35,3,2,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/analysis/FunctionUtilsTest.java,172,125,0/8,178,1/7,1,10/00,8/20,50,FunctionUtilsTest.testCollector(),1,51,2,1/29,1/00,32,25,68,0,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,129,89,6/7,49,3/9,2,3/00,12/17,77,LegendreGaussIntegratorTest.testExactIntegration(),5,92,6,2/07,2/33,11,6,56,8,2,6,1,0,0,0,17,3,0
src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,112,72,4/2,52,21/4,1,3/00,19/67,99,RombergIntegratorTest.testParameters(),4,104,3,1/76,2/00,10,3,53,6,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,111,72,4/2,52,20/7,1,3/00,19/67,98,SimpsonIntegratorTest.testParameters(),4,102,3,1/76,2/00,10,3,53,6,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,111,72,4/2,52,20/7,1,3/00,19/67,99,TrapezoidIntegratorTest.testParameters(),4,104,3,1/76,2/00,10,3,53,6,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,415,247,4/0,138,13/3,7,1/57,20/73,35,BicubicSplineInterpolatingFunctionTest.testPreconditions(),11,411,9+,4/93,4/33,9,13,67,29,3,39,8,8,7,74,14,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatorTest.java,149,91,4/4,45,14/8,3,1/00,19/67,35,BicubicSplineInterpolatorTest.testPreconditions(),5,86,4,1/71,2/33,7,27,46,12,1,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolatorTest.java,131,76,6/6,42,26/0,1,4/00,15/75,134,DividedDifferenceInterpolatorTest.partialerror(),3,61,3,1/86,2/25,9,4,52,11,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,131,78,5/1,47,15/3,1,5/00,11/80,106,LinearInterpolatorTest.testIllegalArguments(),4,110,3,1/78,1/80,11,8,46,13,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,214,140,7/1,69,4/7,1,21/00,5/62,99,LoessInterpolatorTest.testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers(),4,120,4,1/31,2/14,47,22,54,15,2,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatorTest.java,117,70,8/6,28,15/4,3,1/33,15/50,36,MicrosphereInterpolatorTest.testParaboloid2D(),4,40,5,2/25,3/00,6,4,44,4,12,2,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolatorTest.java,131,76,6/6,42,26/0,1,4/00,15/75,134,NevilleInterpolatorTest.partialerror(),3,61,3,1/86,2/25,9,4,52,11,0,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java,159,97,5/2,50,14/5,3,1/00,21/33,36,SmoothingPolynomialBicubicSplineInterpolatorTest.testPreconditions(),6,95,4,1/73,2/67,8,27,49,14,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,200,113,4/4,92,18/5,1,7/00,13/00,162,SplineInterpolatorTest.testIllegalArguments(),4,166,3,1/84,1/71,12,10,75,16,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,517,274,9/9,159,11/8,7,1/43,24/80,36,TricubicSplineInterpolatingFunctionTest.testPreconditions(),28,505,8,3/04,5/50,15,15,131,64,9,8,8,8,27,0,14,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,188,114,5/3,56,14/9,3,1/00,22/67,36,TricubicSplineInterpolatorTest.testPreconditions(),7,103,4,1/59,3/00,15,33,56,13,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,137,90,7/8,45,5/1,1,5/00,14/60,36,UnivariateRealPeriodicInterpolatorTest.testSine(),4,45,3,2/02,2/40,9,8,45,28,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,40,14,0/0,1,12/5,1,4/00,1/50,26,MonitoredFunction.value(),1,27,2,1/29,1/00,2,6,6,0,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java,129,92,2/2,48,21/7,1,4/00,20/75,133,PolynomialFunctionLagrangeFormTest.testParameters(),3,137,3,1/93,1/50,5,4,75,8,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java,128,92,2/2,48,21/1,1,4/00,20/75,133,PolynomialFunctionNewtonFormTest.testParameters(),3,137,3,1/93,1/50,5,4,75,8,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionTest.java,226,116,0/0,190,23/5,1,6/00,17/17,40,PolynomialFunctionTest.testfirstDerivativeComparison(),1,41,2,1/84,1/00,6,7,103,0,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunctionTest.java,134,58,17/2,37,28/4,1,3/00,14/00,93,PolynomialSplineFunctionTest.findKnot(),5,147,4,1/91,4/67,9,7,23,18,1,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,330,206,13/6,197,2/7,7,4/00,6/25,300,PolynomialsUtilsTest.testJacobiOrthogonality(),5,307,6,2/45,2/00,9,28,78,65,23,6,3,0,0,0,14,3,0
src/test/java/org/apache/commons/math/analysis/QuinticFunction.java,37,7,0/0,2,21/6,1,2/00,1/00,29,QuinticFunction.derivative(),1,30,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/analysis/SincFunction.java,46,8,0/0,7,26/1,1,2/00,1/00,32,SincFunction.derivative(),1,35,2,0/88,1/00,3,3,2,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/analysis/SinFunction.java,45,8,0/0,4,33/3,1,2/00,1/00,36,SinFunction.derivative(),1,37,2,0/75,1/00,4,2,2,0,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverAbstractTest.java,233,118,12/7,70,22/7,1,9/00,10/67,138,BaseSecantSolverAbstractTest.getSolution(),4,171,4,2/09,2/78,11,11,57,34,5,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,73,47,0/0,50,4/1,1,3/00,12/00,31,BisectionSolverTest.testMath369(),1,32,2,1/60,1/00,8,3,36,0,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,185,97,0/0,94,7/0,5,2/00,7/80,37,BracketingNthOrderBrentSolverTest.testInsufficientOrder3(),1,203,9+,4/74,1/00,10,10,21,8,5,4,4,4,4,31,7,3,0
src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,224,113,4/4,122,36/2,1,5/00,19/20,178,BrentSolverTest.testBadEndpoints(),4,151,3,1/83,2/00,12,5,86,10,0,0,0,0,0,0,19,3,0
src/test/java/org/apache/commons/math/analysis/solvers/IllinoisSolverTest.java,34,6,0/0,2,20/6,1,2/00,1/00,28,IllinoisSolverTest.getQuinticEvalCounts(),1,29,2,1/00,1/00,2,2,2,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,153,71,2/8,48,39/9,1,4/00,14/75,155,LaguerreSolverTest.testParameters(),3,162,3,1/77,1/50,8,4,55,4,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,132,82,2/4,60,23/5,1,4/00,16/75,127,MullerSolver2Test.testParameters(),3,133,3,1/73,1/50,11,4,63,4,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,135,83,2/4,61,24/4,1,4/00,17/00,129,MullerSolverTest.testParameters(),3,135,3,1/75,1/50,11,4,63,5,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,73,43,0/0,45,12/3,1,2/00,16/50,35,NewtonSolverTest.testQuinticZero(),1,36,2,1/58,1/00,8,2,33,0,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/solvers/PegasusSolverTest.java,34,6,0/0,2,20/6,1,2/00,1/00,28,PegasusSolverTest.getQuinticEvalCounts(),1,29,2,1/00,1/00,2,2,2,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,53,19,0/0,7,20/8,2,2/00,2/25,33,RegulaFalsiSolverTest.testIssue631(),1,51,4,1/30,1/00,6,5,7,1,1,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,128,82,2/4,60,21/1,1,4/00,16/75,123,RiddersSolverTest.testParameters(),3,129,3,1/73,1/50,11,4,63,4,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,37,6,0/0,2,27/0,1,2/00,1/00,28,SecantSolverTest.getQuinticEvalCounts(),1,29,2,1/00,1/00,2,2,2,0,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,128,80,1/3,48,7/0,1,14/00,3/43,47,UnivariateRealSolverUtilsTest.testSolveBadAccuracy(),2,49,3,1/50,1/07,9,23,47,1,0,0,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,75,25,8/0,10,28/0,1,4/00,3/75,44,SumSincFunction.value(),2,47,3,1/32,1/33,5,10,7,3,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/analysis/XMinus5Function.java,39,7,0/0,2,25/6,1,2/00,1/00,29,XMinus5Function.derivative(),1,30,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/complex/ComplexFieldTest.java,36,12,0/0,9,2/8,1,3/00,1/33,26,ComplexFieldTest.testSerial(),1,27,2,0/92,1/00,5,3,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/complex/ComplexFormatAbstractTest.java,264,184,0/0,158,0/0,1,32/00,4/38,38,ComplexFormatAbstractTest.testForgottenImaginaryCharacter(),1,39,2,1/72,1/00,8,36,140,0,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/complex/ComplexFormatTest.java,28,7,0/0,0,0/0,1,2/00,1/00,25,ComplexFormatTest.getLocale(),1,26,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/complex/ComplexTest.java,1142,665,0/0,1141,8/8,1,36/00,16/64,59,ComplexTest.testMultiplyInfInf(),1,60,2,1/89,1/00,8,58,599,0,0,0,0,0,0,0,24,3,0
src/test/java/org/apache/commons/math/complex/ComplexUtilsTest.java,91,46,6/5,55,3/3,1,2/00,15/00,42,ComplexUtilsTest.testPolar2Complex(),4,58,4,1/83,4/00,5,11,21,5,4,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/complex/FrenchComplexFormatTest.java,28,7,0/0,0,0/0,1,2/00,1/00,26,FrenchComplexFormatTest.getLocale(),1,27,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFPTest.java,152,93,15/1,111,6/6,8,1/63,5/69,124,BracketingNthOrderBrentSolverDFPTest.check(),4,87,5,2/62,1/31,8,18,22,20,20,12,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/dfp/Decimal10.java,79,36,0/0,23,0/0,1,17/00,1/00,22,Decimal10.getDecimalDigits(),1,23,2,1/42,1/00,2,17,17,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/dfp/DfpDecTest.java,425,150,0/0,343,5/2,1,1/00,140/00,,,0,34,2,1/89,0/00,6,4,140,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/dfp/DfpMathTest.java,447,154,1/9,486,8/5,1,5/00,27/60,59,DfpMathTest.test(),5,36,2,1/86,1/80,6,10,138,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/dfp/DfpTest.java,1295,649,0/5,1877,18/5,1,4/00,157/75,61,DfpTest.test(),5,39,2,1/96,2/33,8,10,631,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/distribution/AbtractIntegerDistributionTest.java,153,78,14/1,35,9/8,2,6/00,4/75,121,DiceDistribution.cumulativeProbability(),4,123,4,2/38,2/00,4,7,27,35,5,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,293,77,3/9,77,0/3,1,5/00,11/80,24,BetaDistributionTest.testCumulative(),1,25,2,0/83,1/00,30,30,17,0,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/distribution/BinomialDistributionTest.java,109,49,0/0,43,20/2,1,10/00,2/70,33,BinomialDistributionTest.testDegenerate0(),1,34,2,0/71,1/00,22,19,8,0,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/distribution/CauchyDistributionTest.java,104,44,4/5,33,16/3,1,10/00,2/90,36,CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(),1,37,2,1/05,1/00,9,24,11,0,0,0,0,0,0,0,20,3,0
src/test/java/org/apache/commons/math/distribution/ChiSquaredDistributionTest.java,118,49,2/0,39,17/8,1,12/00,2/58,35,ChiSquaredDistributionTest.testDensity(),1,36,2,1/27,1/00,7,22,20,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,339,123,10/6,50,40/4,1,27/00,2/78,147,ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(),7,164,6,1/83,1/48,10,38,51,17,2,4,1,0,0,0,14,3,0
src/test/java/org/apache/commons/math/distribution/ExponentialDistributionTest.java,115,55,0/0,56,14/8,1,12/00,3/25,36,ExponentialDistributionTest.testCumulativeProbabilityExtremes(),1,37,2,0/84,1/00,16,32,7,0,0,0,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/distribution/FDistributionTest.java,125,63,3/2,52,13/6,1,12/00,4/08,36,FDistributionTest.testCumulativeProbabilityExtremes(),1,37,2,0/97,1/00,13,39,11,0,0,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/distribution/GammaDistributionTest.java,149,75,4/0,56,16/8,1,15/00,3/33,78,GammaDistributionTest.testPreconditions(),3,80,3,1/32,1/17,15,25,31,4,0,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,234,115,5/2,81,10/3,1,16/00,5/56,40,HypergeometricDistributionTest.testDegenerateNoFailures(),1,41,2,0/89,1/00,41,46,28,0,0,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java,362,137,8/8,60,37/6,1,27/00,3/19,277,IntegerDistributionAbstractTest.testSampling(),5,293,5,1/77,1/44,9,42,65,14,6,1,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionTest.java,95,31,0/0,36,47/4,1,1/00,25/00,33,KolmogorovSmirnovDistributionTest.testCumulativeDensityFunction(),1,35,2,1/68,1/00,4,2,25,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,178,94,4/3,82,15/2,1,16/00,4/94,37,NormalDistributionTest.verifyQuantiles(),1,160,3,0/97,1/00,26,49,15,4,0,0,0,0,0,0,23,3,0
src/test/java/org/apache/commons/math/distribution/PascalDistributionTest.java,116,53,0/0,45,16/4,1,11/00,2/64,34,PascalDistributionTest.testDegenerate0(),1,35,2,0/77,1/00,22,21,10,0,0,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/distribution/PoissonDistributionTest.java,212,96,7/3,63,23/6,1,17/00,4/18,150,PoissonDistributionTest.testLargeMeanCumulativeProbability(),5,166,6,2/24,1/41,6,19,43,12,7,8,1,0,0,0,21,3,0
src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,144,68,1/5,56,18/1,1,13/00,3/69,36,TDistributionTest.testSmallDf(),1,37,2,0/94,1/00,15,42,11,0,0,0,0,0,0,0,19,3,0
src/test/java/org/apache/commons/math/distribution/WeibullDistributionTest.java,101,42,4/8,39,16/8,1,8/00,3/38,39,WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(),1,40,2,0/98,1/00,10,23,9,0,0,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/distribution/ZipfDistributionTest.java,85,32,0/0,15,17/6,1,10/00,1/40,36,ZipfDistributionTest.testMoments(),1,37,2,1/25,1/00,6,12,14,0,0,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/exception/DimensionMismatchExceptionTest.java,32,8,0/0,5,15/6,1,1/00,3/00,29,DimensionMismatchExceptionTest.testAccessors(),1,30,2,0/88,1/00,4,1,3,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/MaxCountExceededExceptionTest.java,31,7,0/0,3,16/1,1,1/00,2/00,29,MaxCountExceededExceptionTest.testAccessors(),1,30,2,0/71,1/00,4,1,2,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/NonMonotonicSequenceExceptionTest.java,43,18,0/0,22,11/6,1,1/00,12/00,31,NonMonotonicSequenceExceptionTest.testAccessors(),1,33,2,1/39,1/00,5,1,12,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java,33,9,0/0,7,15/2,1,1/00,4/00,29,NotPositiveExceptionTest.testAccessors(),1,30,2,1/00,1/00,4,1,4,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java,33,9,0/0,7,15/2,1,1/00,4/00,29,NotStrictlyPositiveExceptionTest.testAccessors(),1,30,2,1/00,1/00,4,1,4,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,33,9,0/0,7,15/2,1,1/00,4/00,29,NumberIsTooLargeExceptionTest.testAccessors(),1,30,2,1/00,1/00,4,1,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,33,9,0/0,7,15/2,1,1/00,4/00,29,NumberIsTooSmallExceptionTest.testAccessors(),1,30,2,1/00,1/00,4,1,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/OutOfRangeExceptionTest.java,33,9,0/0,7,15/2,1,1/00,4/00,29,OutOfRangeExceptionTest.testAccessors(),1,30,2,1/00,1/00,4,1,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/TooManyEvaluationsExceptionTest.java,37,10,0/0,5,13/5,1,1/00,4/00,31,TooManyEvaluationsExceptionTest.testMessage(),1,32,2,0/90,1/00,5,1,4,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,69,16,0/0,19,15/9,1,1/00,9/00,,,0,33,2,1/19,0/00,6,1,9,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/exception/util/ExceptionContextTest.java,111,65,4/6,57,10/8,2,3/50,6/71,59,ExceptionContextTest.testContext(),3,66,3,1/74,1/43,11,6,37,11,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/filter/KalmanFilterTest.java,211,109,4/6,109,27/0,1,6/00,14/83,254,KalmanFilterTest.assertMatrixEquals(),3,262,4,1/94,1/83,12,8,69,23,1,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/fraction/BigFractionFieldTest.java,36,12,0/0,9,2/8,1,3/00,1/33,27,BigFractionFieldTest.testSerial(),1,28,2,0/92,1/00,5,3,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,283,189,4/2,157,2/8,1,21/00,7/38,140,BigFractionFormatTest.testParseProperInvalidMinus(),3,110,3,2/07,1/38,11,23,97,58,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,511,367,0/0,610,3/5,1,3/00,42/67,44,BigFractionTest.testConstructor(),5,34,2,1/22,2/33,47,193,128,0,0,0,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/fraction/FractionFieldTest.java,36,12,0/0,9,2/8,1,3/00,1/33,27,FractionFieldTest.testSerial(),1,28,2,0/92,1/00,5,3,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,299,207,4/3,173,3/0,1,24/00,7/17,178,FractionFormatTest.testParseProperInvalidMinus(),3,108,3,2/07,1/38,9,26,113,59,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/fraction/FractionTest.java,515,367,0/0,544,5/8,1,2/00,177/00,39,FractionTest.testConstructor(),24,34,2,1/94,12/50,9,4,355,0,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/genetics/BinaryChromosomeTest.java,56,26,11/5,21,1/8,1,3/00,6/33,26,BinaryChromosomeTest.testInvalidConstructor(),3,34,4,1/85,2/00,4,3,14,3,2,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/genetics/BinaryMutationTest.java,37,14,21/4,11,5/4,1,1/00,9/00,26,BinaryMutationTest.testMutate(),4,37,4,2/00,4/00,4,1,2,5,2,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/ChromosomeTest.java,97,62,0/0,19,1/0,11,1/18,3/85,31,?(instance of Chromosome).fitness(),1,32,4,2/07,1/00,6,12,33,11,9,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/DummyBinaryChromosome.java,37,10,0/0,3,10/8,1,3/00,1/00,26,DummyBinaryChromosome.fitness(),1,27,2,1/10,1/00,3,3,4,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/DummyRandomKey.java,37,10,0/0,3,10/8,1,3/00,1/00,26,DummyRandomKey.fitness(),1,27,2,1/10,1/00,3,3,4,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/ElitisticListPopulationTest.java,41,18,5/6,7,0/0,2,1/50,2/67,28,ElitisticListPopulationTest.testNextGeneration(),2,32,3,1/61,1/33,4,3,7,4,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/FitnessCachingTest.java,76,33,3/0,12,18/4,2,2/00,3/50,73,FitnessCachingTest.randomPopulation(),2,77,3,1/45,1/25,6,11,11,5,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/genetics/FixedGenerationCountTest.java,56,24,4/2,3,10/7,2,3/50,2/57,28,FixedGenerationCountTest.testIsSatisfied(),2,38,4,2/20,1/14,5,2,6,7,5,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/GeneticAlgorithmTestBinary.java,98,39,7/7,21,26/5,2,2/00,5/00,107,FindOnes.fitness(),3,110,4,1/72,1/75,6,10,14,7,2,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java,111,43,9/3,21,27/0,2,2/00,5/00,112,MinPermutations.fitness(),3,119,5,1/79,1/75,7,11,13,9,2,1,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/genetics/ListPopulationTest.java,51,27,0/0,6,2/0,5,1/00,4/20,30,?(instance of Chromosome).fitness(),1,31,4,1/90,1/00,5,5,13,4,4,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/OnePointCrossoverTest.java,49,26,3/8,22,6/1,1,1/00,21/00,25,OnePointCrossoverTest.testCrossover(),2,36,3,2/23,2/00,4,1,6,15,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/RandomKeyMutationTest.java,38,16,18/8,10,0/0,1,1/00,11/00,26,RandomKeyMutationTest.testMutate(),4,37,5,2/13,4/00,4,1,3,6,1,1,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/genetics/RandomKeyTest.java,146,98,3/1,115,2/1,2,6/50,5/92,30,testComparatorPermutation().Arrays.asList(),1,110,4,0/83,1/00,40,40,16,2,1,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/genetics/TournamentSelectionTest.java,47,21,9/5,12,4/3,2,1/50,3/67,27,TournamentSelectionTest.testSelect(),3,32,3,1/81,1/67,4,3,7,7,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSetTest.java,87,56,0/0,115,0/0,1,1/00,44/00,,,0,34,2,1/59,0/00,11,1,44,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/FrenchVector3DFormatTest.java,28,7,0/0,0,0/0,1,2/00,1/00,26,FrenchVector3DFormatTest.getLocale(),1,27,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/LineTest.java,121,49,0/0,120,0/0,1,1/00,25/00,28,LineTest.testContains(),1,29,2,1/68,1/00,7,2,41,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/PlaneTest.java,146,93,0/0,168,0/0,1,1/00,12/00,29,PlaneTest.testContains(),1,30,2,1/03,1/00,9,73,12,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,216,101,3/0,127,0/0,2,0/50,30/00,33,PolyhedronsSetTest.testBox(),4,46,5,1/44,4/00,15,58,10,15,3,3,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrderTest.java,48,18,22/2,6,2/1,1,2/00,5/00,45,RotationOrderTest.getFieldName(),4,50,5,1/67,3/00,6,2,5,3,1,1,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,445,266,11/3,333,1/8,1,12/00,17/58,151,RotationTest.testAngles(),9,309,6,2/24,3/50,7,48,156,27,15,10,10,0,0,0,5,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/SubLineTest.java,139,72,0/0,197,0/0,1,3/00,16/33,30,SubLineTest.testNoSegments(),1,31,2,1/72,1/00,8,5,61,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,290,160,0/0,154,0/0,1,29/00,4/07,38,Vector3DFormatAbstractTest.testForgottenSuffix(),1,39,2,1/68,1/00,9,33,118,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormatTest.java,28,7,0/0,0,0/0,1,2/00,1/00,26,Vector3DFormatTest.getLocale(),1,27,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DTest.java,294,151,0/0,282,5/1,1,1/00,142/00,,,0,243,3,2/16,0/00,8,1,102,41,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,113,57,0/0,96,0/0,1,1/00,27/00,33,LineTest.testContains(),1,34,2,1/58,1/00,11,3,45,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,850,232,0/0,386,0/2,1,2/00,1/50,39,PolygonsSetTest.testSimplyConnected(),1,53,2,0/19,1/00,199,41,3,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/euclidean/twod/SubLineTest.java,131,68,0/0,165,0/0,1,3/00,15/00,30,SubLineTest.testNoSegments(),1,31,2,1/70,1/00,8,5,57,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTreeTest.java,146,85,1/2,136,1/4,1,1/00,79/00,,,0,36,3,2/75,0/00,5,1,4,75,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,1061,598,1/5,679,8/7,1,16/00,29/63,304,Array2DRowRealMatrixTest.testOperate(),7,136,4,1/98,2/43,62,63,376,23,76,0,0,0,0,0,24,3,0
src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,531,330,0/9,388,10/2,1,35/00,4/26,258,ArrayFieldVectorTest.testConstructors(),8,134,4,1/36,1/29,127,18,144,48,3,0,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1190,892,1/6,881,8/6,3,39/33,6/60,183,ArrayRealVectorTest.dotProduct(),2,120,6,0/95,1/03,193,588,91,11,6,2,2,0,0,0,41,3,0
src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,179,87,0/0,178,2/2,1,5/00,14/40,42,BiDiagonalTransformerTest.checkAEqualUSVt(),1,43,2,1/74,1/00,8,7,72,0,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1264,675,2/7,814,6/6,9,1/11,9/90,187,BlockFieldMatrixTest.testPlusMinus(),3,304,9+,1/30,1/78,443,80,101,50,12,3,10,49,7,4,20,3,0
src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1168,678,4/1,790,7/6,3,4/33,16/69,208,BlockRealMatrixTest.testSeveralBlocks(),23,1094,9+,2/35,3/62,297,53,109,95,19,3,2,1,2,103,24,3,0
src/test/java/org/apache/commons/math/linear/CholeskyDecompositionTest.java,122,55,3/6,63,8/2,1,10/00,3/70,94,CholeskyDecompositionTest.testLLowerTriangular(),3,99,4,1/65,1/20,4,14,35,1,1,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java,98,37,13/5,44,9/2,1,6/00,4/50,37,CholeskySolverTest.testSolveDimensionErrors(),4,42,3,1/84,1/83,5,5,18,9,0,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,455,336,6/3,208,2/6,7,5/57,7/85,405,ConjugateGradientTest.testPreconditionedSolution2(),7,199,5,2/63,1/54,8,28,143,81,69,13,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/linear/EigenDecompositionTest.java,512,232,0/0,272,9/4,1,13/00,4/08,39,testDimension4WithoutSplit().MatrixUtils.createRealMatrix(),1,39,2,0/54,1/00,160,19,53,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/linear/EigenSolverTest.java,126,56,10/7,60,8/7,1,7/00,6/43,62,EigenSolverTest.testSolveDimensionErrors(),4,39,3,1/88,1/86,7,4,34,11,0,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/linear/FieldLUDecompositionTest.java,273,152,11/2,184,6/2,1,8/00,13/63,157,FieldLUDecompositionTest.testPPermutation(),12,177,5,1/98,3/13,24,22,91,27,11,6,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/FieldLUSolverTest.java,163,80,15/0,81,8/6,1,9/00,6/89,123,FieldLUSolverTest.testSolve(),7,58,4,1/99,2/33,7,11,42,16,4,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java,1058,577,0/5,663,8/6,10,0/50,9/00,128,FieldMatrixImplTest.testPlusMinus(),3,135,4,0/39,2/00,487,78,82,3,1,0,0,0,0,0,19,3,0
src/test/java/org/apache/commons/math/linear/FrenchRealVectorFormatTest.java,28,7,0/0,0,0/0,1,2/00,1/00,26,FrenchRealVectorFormatTest.getLocale(),1,27,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/HilbertMatrix.java,68,26,19/2,6,19/1,1,4/00,4/50,51,HilbertMatrix.operate(),6,66,5,2/31,2/25,3,5,7,5,4,2,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/InverseHilbertMatrix.java,92,38,13/2,14,26/1,1,5/00,5/60,75,InverseHilbertMatrix.operate(),6,91,5,2/18,2/00,4,6,16,5,5,2,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/linear/LUDecompositionTest.java,261,157,10/8,179,6/1,1,15/00,9/13,151,LUDecompositionTest.testPPermutation(),11,166,5,2/22,2/13,4,16,100,21,10,6,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/LUSolverTest.java,154,58,0/0,98,11/0,1,2/00,24/00,52,testThreshold().MatrixUtils.createRealMatrix(),1,52,2,1/74,1/00,5,5,48,0,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/linear/MatrixDimensionMismatchExceptionTest.java,35,10,0/0,9,14/3,1,1/00,5/00,29,MatrixDimensionMismatchExceptionTest.testAccessors(),1,31,2,1/10,1/00,4,1,5,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java,306,148,2/0,146,14/4,5,1/00,5/40,68,MatrixUtilsTest.testcreateFieldMatrix(),4,72,3,0/73,2/50,88,31,24,11,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/linear/OpenMapRealMatrixTest.java,25,7,0/0,1,0/0,1,1/00,1/00,25,OpenMapRealMatrixTest.testMath679(),1,26,2,0/57,1/00,4,2,1,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/PivotingQRDecompositionTest.java,204,129,1/6,153,4/4,4,4/50,5/83,164,PivotingQRDecompositionTest.checkTrapezoidal(),2,166,5,1/86,1/22,6,21,97,3,3,2,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/PivotingQRSolverTest.java,174,95,8/4,95,7/5,3,3/67,7/00,74,PivotingQRSolverTest.testUnderdetermined(),3,161,4,1/97,1/73,7,13,56,18,3,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java,201,127,1/6,150,4/0,4,4/50,5/78,161,?(instance of DefaultRealMatrixPreservingVisitor).visit(),2,163,5,1/88,1/22,5,21,96,3,3,2,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/QRSolverTest.java,168,89,6/7,96,8/9,3,3/67,6/55,73,QRSolverTest.testSolve(),3,159,4,1/96,1/55,6,13,53,17,2,0,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,314,170,0/6,165,0/3,1,31/00,4/10,309,RealVectorFormatAbstractTest.testParseNoComponents(),2,311,3,1/71,1/03,8,35,125,2,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/linear/RealVectorFormatTest.java,28,7,0/0,0,0/0,1,2/00,1/00,26,RealVectorFormatTest.getLocale(),1,27,2,0/86,1/00,3,2,2,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/linear/RealVectorTest.java,292,184,4/9,118,1/0,3,11/67,2/94,209,RealVectorTest.testSparseIterator(),5,69,4,1/75,1/34,41,13,88,39,5,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/linear/SingularValueDecompositionTest.java,280,131,1/5,203,7/1,1,7/00,16/00,47,SingularValueDecompositionTest.testMoreColumns(),2,57,3,1/83,1/33,9,10,110,5,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java,123,59,8/5,78,8/9,1,9/00,5/22,36,SingularValueSolverTest.testSolveDimensionErrors(),4,41,3,1/88,1/56,5,7,38,10,0,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java,648,337,0/9,390,14/5,14,0/29,10/75,185,SparseFieldMatrixTest.testPlusMinus(),3,164,4,0/72,2/33,250,53,86,10,10,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java,194,117,0/0,164,13/4,1,0/00,0/00,,,0,53,2,0/32,0/00,95,25,8,0,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,639,342,1/2,387,13/3,1,7/00,10/86,192,SparseRealMatrixTest.testMultiply(),4,148,4,0/83,2/00,142,124,70,5,1,0,0,0,0,0,15,3,0
src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,774,591,1/7,527,12/9,2,47/50,5/20,343,SparseRealVectorTest.testDataInOut(),6,148,4,1/95,1/11,36,19,474,60,2,0,0,0,0,0,32,3,0
src/test/java/org/apache/commons/math/linear/SymmLQTest.java,575,380,7/1,225,0/0,8,7/75,5/31,28,SymmLQTest.saundersTest(),13,72,7,2/62,1/56,8,50,159,79,67,15,10,2,0,0,6,3,0
src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java,155,67,3/0,101,1/9,1,6/00,6/50,44,TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(),2,46,3,1/34,1/33,20,8,35,4,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/linear/UnmodifiableArrayRealVectorTest.java,39,7,14/3,3,28/2,1,1/00,4/00,33,UnmodifiableArrayRealVectorTest.createVector(),2,36,3,1/43,2/00,2,1,3,1,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/UnmodifiableOpenMapRealVectorTest.java,43,9,22/2,4,27/9,1,1/00,5/00,37,UnmodifiableOpenMapRealVectorTest.createVector(),3,41,4,1/67,3/00,2,2,3,1,1,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/linear/UnmodifiableRealVectorAbstractTest.java,428,226,27/9,165,25/2,1,16/00,11/13,192,UnmodifiableRealVectorAbstractTest.equals(),22,176,5,2/42,4/88,14,24,80,72,33,3,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/MathExceptionTest.java,104,65,4/6,51,10/6,1,4/00,12/25,84,MathExceptionTest.testSerialization(),4,105,3,1/66,1/75,12,4,43,6,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,159,101,4/0,93,6/9,2,6/00,6/50,52,ContinuousOutputModelTest.testRandomAccess(),3,72,4,1/56,1/43,23,22,38,15,4,0,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,114,64,0/0,41,6/1,3,2/67,6/63,39,?(instance of EventHandler).eventOccurred(),1,44,4,1/88,1/00,9,4,43,6,4,0,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,140,61,8/2,21,27/9,2,5/00,3/50,71,OverlappingEventsTest.test(),6,89,4,1/79,1/50,11,8,29,9,4,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/ode/events/ReappearingEventTest.java,73,31,0/0,16,1/4,1,3/00,5/67,33,ReappearingEventTest.testGragg(),1,34,2,1/19,1/00,11,3,17,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,88,46,8/7,25,0/0,2,4/00,3/38,40,FirstOrderConverterTest.testDecreasingSteps(),3,49,4,1/85,1/50,8,6,19,11,2,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/ode/JacobianMatricesTest.java,530,370,7/0,247,4/5,5,9/00,6/58,166,JacobianMatricesTest.testFinalResult(),7,198,4,2/51,1/58,7,10,157,179,17,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,129,80,5/0,94,2/3,1,6/00,9/67,137,AdamsBashforthIntegratorTest.polynomial(),4,149,4,1/89,1/67,13,9,34,22,2,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,129,80,5/0,94,2/3,1,6/00,9/67,137,AdamsMoultonIntegratorTest.polynomial(),4,149,4,1/89,1/67,13,9,34,22,2,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,253,166,9/6,140,1/2,6,3/50,6/38,126,ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(),7,53,5,2/35,1/86,18,13,70,35,28,6,0,0,0,0,20,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,76,48,6/3,37,0/0,1,2/00,16/00,47,ClassicalRungeKuttaStepInterpolatorTest.serialization(),4,83,4,1/63,2/50,14,2,21,10,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,288,192,5/7,165,1/0,4,4/50,8/00,313,VariableHandler.handleStep(),6,289,5,2/25,1/61,17,13,95,42,22,3,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,127,84,6/0,65,0/0,2,2/50,13/00,54,DormandPrince54StepInterpolatorTest.serialization(),4,131,6,2/24,2/40,16,4,36,12,8,8,1,0,0,0,16,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,313,210,6/7,164,1/0,5,4/40,7/55,340,VariableHandler.handleStep(),6,52,5,2/24,1/68,17,17,109,41,24,4,0,0,0,0,22,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,127,84,6/0,65,0/0,2,2/50,13/00,54,DormandPrince853StepInterpolatorTest.serialization(),4,131,6,2/24,2/40,16,4,36,12,8,8,1,0,0,0,16,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,148,93,7/5,93,0/0,3,3/33,7/00,48,EulerIntegratorTest.testDecreasingSteps(),7,67,5,2/18,1/80,16,9,40,7,18,5,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,154,109,5/5,84,0/0,2,3/00,14/17,138,EulerStepInterpolatorTest.serialization(),4,171,4,1/78,2/00,17,6,71,14,1,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,194,124,7/3,114,1/5,4,3/75,6/13,49,GillIntegratorTest.testDecreasingSteps(),7,68,5,2/20,1/67,17,12,56,16,20,5,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,76,48,6/3,37,0/0,1,2/00,16/00,47,GillStepInterpolatorTest.serialization(),4,83,4,1/63,2/50,14,2,21,10,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,321,216,4/6,182,1/2,5,4/40,7/68,349,VariableStepHandler.handleStep(),6,325,5,2/21,1/45,18,19,113,38,27,3,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,127,84,6/0,65,0/0,2,2/50,13/00,55,GraggBulirschStoerStepInterpolatorTest.serialization(),4,133,6,2/24,2/40,16,4,36,12,8,8,1,0,0,0,16,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,304,192,6/8,180,3/6,5,4/00,8/00,277,HighamHall54IntegratorTest.testSanityChecks(),6,48,5,2/15,1/80,18,15,99,48,12,3,0,0,0,0,25,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,127,84,6/0,65,0/0,2,2/50,13/00,54,HighamHall54StepInterpolatorTest.serialization(),4,131,6,2/24,2/40,16,4,36,12,8,8,1,0,0,0,17,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,149,93,7/5,93,0/0,3,3/33,7/00,48,MidpointIntegratorTest.testDecreasingSteps(),7,66,5,2/18,1/80,16,9,40,7,18,5,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,77,49,6/1,37,0/0,1,2/00,16/00,48,MidpointStepInterpolatorTest.serialization(),4,84,4,1/59,2/50,15,2,21,10,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/StepProblem.java,51,24,0/0,2,0/0,1,8/00,1/13,27,StepProblem.resetState(),1,29,2,1/21,1/00,4,11,9,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,185,118,7/6,109,1/6,4,3/50,6/21,49,ThreeEighthesIntegratorTest.testDecreasingSteps(),7,68,5,2/22,1/71,17,11,50,17,20,5,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,76,48,6/3,37,0/0,1,2/00,16/00,47,ThreeEighthesStepInterpolatorTest.serialization(),4,83,4,1/63,2/50,14,2,21,10,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,130,36,13/9,14,45/4,1,7/00,3/00,132,DummyStepInterpolator.readExternal(),4,121,4,1/64,1/71,6,9,15,4,2,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,111,73,6/8,52,0/9,2,3/50,7/43,52,DummyStepInterpolatorTest.testFixedState(),3,46,3,1/73,1/71,12,5,47,9,0,0,0,0,0,0,21,3,0
src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,73,46,6/5,33,0/0,1,2/00,15/00,45,NordsieckStepInterpolatorTest.serialization(),4,80,4,1/61,2/50,14,2,19,10,1,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,66,37,5/4,38,0/0,2,1/50,10/00,32,?(instance of StepHandler).handleStep(),3,38,5,3/08,2/33,6,2,3,2,22,3,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputOverlapTest.java,45,16,0/0,5,6/7,1,7/00,1/00,8,StepNormalizerOutputOverlapTest.getO(),1,9,2,1/31,1/00,2,7,7,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTest.java,45,16,0/0,5,6/7,1,7/00,1/00,8,StepNormalizerOutputTest.getO(),1,9,2,1/31,1/00,2,7,7,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,188,89,1/1,103,30/3,1,23/00,2/17,186,StepNormalizerOutputTestBase.doTest(),2,199,3,1/47,1/04,9,30,49,1,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,107,56,5/4,36,0/0,3,3/67,3/27,47,StepNormalizerTest.testBoundaries(),3,52,5,1/93,1/55,10,12,23,4,3,6,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/ode/TestProblem1.java,74,25,8/0,9,32/4,1,5/00,3/20,71,TestProblem1.computeTheoreticalState(),2,83,3,1/56,1/40,3,6,15,1,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/ode/TestProblem2.java,76,26,7/7,9,32/9,1,5/00,3/40,72,TestProblem2.computeTheoreticalState(),2,85,3,1/58,1/40,3,6,16,1,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/ode/TestProblem3.java,108,48,2/1,18,31/5,1,6/00,6/17,102,TestProblem3.computeTheoreticalState(),3,109,3,1/85,1/33,3,8,30,7,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/ode/TestProblem4.java,129,54,0/0,16,21/7,3,5/33,2/56,48,Stop.resetState(),1,49,2,1/20,1/00,9,25,20,0,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/ode/TestProblem5.java,37,7,0/0,3,24/3,1,2/00,1/50,31,TestProblem5.copy(),1,32,2,1/14,1/00,2,2,3,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/ode/TestProblem6.java,77,26,7/7,8,32/5,1,5/00,3/60,70,TestProblem6.computeTheoreticalState(),2,77,3,1/69,1/40,2,6,16,2,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/ode/TestProblemAbstract.java,161,61,6/6,10,41/0,1,14/00,2/43,64,TestProblemAbstract.TestProblemAbstract(),5,69,3,1/56,1/29,4,23,30,4,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/ode/TestProblemFactory.java,44,4,0/0,1,27/3,1,0/00,0/00,,,0,47,2,0/83,0/00,2,3,1,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/ode/TestProblemHandler.java,129,59,11/9,25,29/5,1,7/00,5/71,71,TestProblemHandler.handleStep(),8,82,5,2/07,2/00,5,14,21,11,7,1,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,842,343,9/3,183,7/2,7,7/29,4/96,70,?(instance of nistMVRF).partialDeriv(),9,840,6,2/47,1/63,17,52,130,65,66,16,1,0,0,0,9,3,0
src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,482,287,6/3,146,7/3,15,3/47,3/65,503,Rastrigin.value(),4,479,4,2/16,1/35,13,40,133,91,10,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,592,283,0/0,281,4/6,1,7/00,35/43,47,CMAESOptimizerTest.testInputSigmaDimensionMismatch(),1,48,2,1/81,1/00,19,16,248,0,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,148,73,0/0,83,0/7,2,5/00,5/90,30,MultivariateFunctionMappingAdapterTest.testStartSimplexInsideRange(),1,32,2,0/85,1/00,31,22,20,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,144,69,0/0,86,0/7,1,3/00,18/67,31,MultivariateFunctionPenaltyAdapterTest.testStartSimplexInsideRange(),1,33,2,0/29,1/00,53,12,4,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,123,64,15/6,18,14/6,3,2/00,8/50,33,PowellOptimizerTest.testMaximizeQuadratic(),4,61,4,2/00,2/67,9,6,33,12,6,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,179,113,0/0,114,3/9,4,1/00,24/00,30,SimplexOptimizerMultiDirectionalTest.testMinimize1(),1,92,3,1/32,1/00,31,31,40,14,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,232,157,0/0,147,2/2,8,2/50,6/80,218,FourExtrema.value(),2,181,8,0/92,1/09,68,62,28,3,1,0,1,1,1,0,12,3,0
src/test/java/org/apache/commons/math/optimization/fitting/CurveFitterTest.java,115,77,1/3,52,4/3,3,1/00,20/00,29,CurveFitterTest.testMath372(),1,89,4,2/26,1/00,7,5,44,5,17,0,0,0,0,0,15,3,0
src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java,315,65,0/0,50,14/3,1,8/00,5/50,186,GaussianFitterTest.testFit07(),1,187,2,1/58,1/00,6,15,44,0,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,150,86,1/2,68,11/3,1,3/00,13/67,56,HarmonicFitterTest.testNoError(),2,76,3,1/37,1/33,10,35,40,1,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/optimization/fitting/PolynomialFitterTest.java,108,52,1/9,58,5/6,1,1/00,40/00,,,0,38,3,2/29,0/00,11,1,2,38,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/optimization/general/CircleScalar.java,81,43,7/0,18,6/2,1,7/00,3/86,40,CircleScalar.value(),2,43,3,1/49,1/50,10,8,19,6,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/optimization/general/CircleVectorial.java,82,46,8/7,21,6/1,1,7/00,4/43,51,CircleVectorial.jacobian(),3,46,3,1/72,1/57,7,8,22,9,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,428,187,1/6,185,14/5,4,5/00,8/20,103,LinearProblem.jacobian(),1,248,6,0/55,1/00,114,65,20,0,0,0,1,0,0,0,26,3,0
src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,528,251,2/4,257,12/7,2,8/00,9/44,323,LevenbergMarquardtOptimizerTest.checkEstimate(),3,116,3,1/53,1/40,47,54,139,24,0,0,0,0,0,0,32,3,0
src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,1354,527,0/0,403,4/7,2,0/50,160/00,97,MinpackTest.testMinpackLinearFullRank(),2,596,3,0/76,2/00,351,17,94,66,0,0,0,0,0,0,21,3,0
src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,357,146,2/7,111,17/4,5,3/60,7/00,356,LinearProblem.gradient(),3,244,6,0/89,1/50,74,45,25,12,1,0,1,0,0,0,23,3,0
src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,476,350,0/0,576,1/9,1,2/00,113/00,33,SimplexSolverTest.testMath434NegativeVariable(),1,34,2,1/62,1/00,9,115,226,0,0,0,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java,99,45,0/0,43,0/0,1,3/00,11/33,31,SimplexTableauTest.testDropPhase1Objective(),1,32,2,1/58,1/00,8,3,34,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,120,75,5/3,46,1/7,2,4/00,4/75,83,Circle.value(),2,86,3,1/36,1/43,19,16,34,6,0,0,0,0,0,0,15,3,0
src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,168,59,3/4,38,38/1,4,1/25,6/40,99,MultiStartDifferentiableMultivariateVectorialOptimizerTest.testTrivial(),3,115,3,1/34,1/40,18,10,27,6,0,0,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,65,36,0/0,19,0/0,2,2/00,3/50,33,Rosenbrock.getCount(),1,34,3,1/11,1/00,12,10,14,1,0,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/optimization/univariate/BracketFinderTest.java,101,64,6/3,50,4/0,5,1/60,6/75,34,?(instance of UnivariateFunction).value(),3,36,5,2/12,2/00,6,8,40,4,6,4,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,107,65,6/2,62,10/3,1,5/00,10/00,67,BrentOptimizerTest.testQuinticMinStatistics(),3,45,3,1/74,1/80,10,5,42,8,0,0,0,0,0,0,19,3,0
src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,95,58,6/9,51,4/2,3,1/33,10/50,77,MultiStartUnivariateRealOptimizerTest.testBadFunction(),3,81,5,1/80,2/25,11,5,32,8,2,1,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/PerfTestUtils.java,236,67,17/9,34,39/0,2,1/00,1/00,244,RunTest.getName(),1,108,6,2/50,1/00,7,5,29,13,4,8,2,0,0,0,7,3,0
src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java,33,8,0/0,3,15/2,1,2/00,2/00,27,AbstractRandomGeneratorTest.makeGenerator(),1,28,2,1/25,1/00,2,2,4,0,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/random/BitsStreamGeneratorTest.java,68,25,0/0,10,16/2,3,2/67,1/25,29,TestBitStreamGenerator.next(),1,49,3,1/80,1/00,3,5,11,6,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java,108,63,15/9,50,6/5,1,5/00,9/20,34,CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(),5,41,4,1/95,3/00,9,8,29,11,6,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,249,136,6/6,120,19/7,1,18/00,5/33,233,EmpiricalDistributionTest.verifySame(),3,252,4,1/72,1/50,14,26,83,13,1,0,0,0,0,0,19,3,0
src/test/java/org/apache/commons/math/random/GaussianRandomGeneratorTest.java,32,14,7/1,9,21/9,1,1/00,8/00,28,GaussianRandomGeneratorTest.testMeanAndStandardDeviation(),2,34,3,1/29,2/00,5,1,7,1,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/ISAACTest.java,375,20,5/0,8,2/7,1,2/00,5/00,380,ISAACTest.getActualSequence(),2,383,3,1/35,1/50,4,6,9,1,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,295,16,12/5,6,0/7,1,2/00,5/00,33,MersenneTwisterTest.testMakotoNishimura(),3,291,3,1/63,2/00,4,2,6,4,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/random/RandomAdaptorTest.java,92,48,0/0,24,10/9,2,7/50,1/73,33,ConstantGenerator.setSeed(),1,66,3,1/92,1/00,5,3,31,9,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/random/RandomDataTest.java,984,608,18/1,412,17/7,1,33/00,16/09,274,RandomDataTest.checkNextPoissonConsistency(),15,827,5,2/24,4/48,36,41,315,178,33,5,0,0,0,0,48,3,0
src/test/java/org/apache/commons/math/random/RandomGeneratorAbstractTest.java,306,169,25/4,66,16/0,1,17/00,8/06,94,RandomGeneratorAbstractTest.testNextIntDirect(),14,138,7,2/50,3/53,11,21,57,44,28,6,1,1,0,0,6,3,0
src/test/java/org/apache/commons/math/random/StableRandomGeneratorTest.java,119,54,13/0,35,18/5,1,7/00,5/43,43,StableRandomGeneratorTest.testBetaRangeAboveOne(),2,48,3,1/87,2/00,7,9,22,16,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/random/TestRandomGenerator.java,37,9,0/0,4,18/9,1,2/00,1/50,32,TestRandomGenerator.nextDouble(),1,33,2,1/00,1/00,3,3,3,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/UncorrelatedRandomVectorGeneratorTest.java,56,33,9/1,15,12/5,1,2/00,10/50,43,UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(),4,59,4,1/76,2/50,7,5,12,7,2,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/random/UniformRandomGeneratorTest.java,32,14,7/1,9,21/9,1,1/00,8/00,28,UniformRandomGeneratorTest.testMeanAndStandardDeviation(),2,34,3,1/29,2/00,5,1,7,1,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/random/ValueServerTest.java,223,131,8/4,101,17/9,1,11/00,9/64,55,ValueServerTest.testFill(),3,63,3,1/89,2/00,13,12,82,24,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/random/Well1024aTest.java,71,11,9/1,4,0/0,1,2/00,2/50,31,Well1024aTest.testReferenceCode(),2,74,3,1/18,1/50,4,2,4,1,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/random/Well19937aTest.java,108,15,13/3,5,0/0,1,2/00,4/50,30,Well19937aTest.testReferenceCode(),3,39,3,1/47,2/00,4,2,7,2,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/Well19937cTest.java,108,15,13/3,5,0/0,1,2/00,4/50,30,Well19937cTest.testReferenceCode(),3,39,3,1/47,2/00,4,2,7,2,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/Well44497aTest.java,108,15,13/3,5,0/0,1,2/00,4/50,30,Well44497aTest.testReferenceCode(),3,39,3,1/47,2/00,4,2,7,2,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/Well44497bTest.java,108,15,13/3,5,0/0,1,2/00,4/50,30,Well44497bTest.testReferenceCode(),3,39,3,1/47,2/00,4,2,7,2,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/random/Well512aTest.java,69,11,9/1,4,0/0,1,2/00,2/50,29,Well512aTest.testReferenceCode(),2,70,3,1/18,1/50,4,2,4,1,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/Retry.java,27,5,0/0,0,14/8,0,0/00,0/00,,,0,18,0,0/00,0/00,5,0,0,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/RetryRunner.java,74,24,16/7,8,28/4,1,2/00,7/50,43,RetryRunner.methodInvoker(),5,67,5,2/04,3/00,7,2,6,4,2,3,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/RetryRunnerTest.java,48,15,6/7,4,22/9,1,2/00,1/50,50,RetryRunnerTest.testRetryFailSometimes(),2,52,3,0/80,1/50,7,5,2,1,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/special/BetaTest.java,101,44,0/0,21,3/0,1,19/00,1/11,27,BetaTest.testLogBetaPositivePositive(),1,29,2,1/39,1/00,4,19,21,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/special/ErfTest.java,199,98,6/1,80,11/6,1,10/00,8/20,204,ErfTest.testTwoArgumentErf(),3,208,4,2/08,1/60,6,10,57,20,5,0,0,0,0,0,12,3,0
src/test/java/org/apache/commons/math/special/GammaTest.java,137,60,3/3,48,5/8,1,17/00,2/18,113,GammaTest.testTrigamma(),2,123,3,1/55,1/12,6,17,35,2,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/stat/CertifiedDataTest.java,127,68,2/9,82,13/4,1,3/00,12/67,102,CertifiedDataTest.loadStats(),3,107,3,1/46,1/67,9,21,36,2,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPointTest.java,54,28,0/0,31,0/0,1,3/00,5/67,32,EuclideanIntegerPointTest.testDistance(),1,33,2,1/32,1/00,8,3,17,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java,238,95,0/0,97,11/3,1,1/00,29/00,34,KMeansPlusPlusClustererTest.dimension2(),1,75,3,1/36,1/00,12,54,13,17,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/stat/correlation/CovarianceTest.java,221,63,7/9,65,13/6,2,2/00,8/25,110,CovarianceTest.testConstant(),1,216,4,1/52,1/00,12,14,32,5,1,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,292,103,3/9,101,10/6,2,3/50,10/71,171,PearsonsCorrelationTest.testPValueNearZero(),2,237,4,1/75,1/20,13,11,72,5,3,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/stat/correlation/SpearmansRankCorrelationTest.java,120,41,2/4,36,17/5,2,2/00,5/00,38,SpearmansRankCorrelationTest.testConstant(),1,100,3,1/38,1/00,11,6,23,2,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/correlation/StorelessCovarianceTest.java,269,76,14/5,47,10/4,1,7/00,8/57,216,StorelessCovarianceTest.testSwissFertilityByEntry(),4,245,5,2/08,2/57,6,10,44,8,4,4,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,135,84,16/7,63,8/1,1,6/00,9/50,58,CertifiedDataAbstractTest.getProperty(),7,78,6,2/35,3/50,17,10,20,18,9,3,7,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/data/LewTest.java,26,4,0/0,0,11/5,1,1/00,1/00,26,LewTest.getResourceName(),1,27,2,0/75,1/00,2,1,1,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/stat/data/LotteryTest.java,26,4,0/0,0,11/5,1,1/00,1/00,26,LotteryTest.getResourceName(),1,27,2,0/75,1/00,2,1,1,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatisticTest.java,97,53,18/9,27,21/6,1,2/00,19/50,51,AbstractUnivariateStatisticTest.testTestNegative(),9,43,4,1/98,6/00,6,8,21,17,1,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,256,134,15/7,105,27/7,1,8/00,14/50,265,AggregateSummaryStatisticsTest.generatePartition(),7,104,4,2/10,3/75,10,8,81,28,7,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,306,200,5/5,229,9/8,5,5/00,6/12,92,DescriptiveStatisticsTest.testGetValues(),4,227,4,2/03,1/44,15,16,119,49,1,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/stat/descriptive/ListUnivariateImpl.java,179,72,13/9,28,31/3,1,14/00,3/14,125,ListUnivariateImpl.getN(),5,130,4,1/65,1/86,11,17,32,10,2,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/stat/descriptive/ListUnivariateImplTest.java,126,86,2/3,96,7/9,1,5/00,12/20,92,ListUnivariateImplTest.testProductAndGeometricMean(),2,98,3,1/64,1/40,8,17,59,2,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/descriptive/MixedListUnivariateImplTest.java,173,95,0/0,113,5/2,1,1/00,71/00,,,0,54,2,1/64,0/00,10,14,71,0,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/FirstMomentTest.java,41,9,0/0,1,26/8,1,2/00,1/00,35,FirstMomentTest.expectedValue(),1,36,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/FourthMomentTest.java,41,9,0/0,1,26/8,1,2/00,1/00,35,FourthMomentTest.expectedValue(),1,36,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/GeometricMeanTest.java,66,26,0/0,27,25/8,1,3/00,5/33,36,GeometricMeanTest.testSpecialValues(),1,37,2,1/38,1/00,6,4,16,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/InteractionTest.java,68,22,4/5,14,4/4,1,1/00,11/00,61,InteractionTest.testInteraction(),2,70,3,1/36,2/00,4,7,10,1,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/KurtosisTest.java,59,22,0/0,21,23/7,1,3/00,4/00,36,KurtosisTest.testNaN(),1,37,2,1/27,1/00,6,4,12,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/MeanTest.java,59,22,0/0,17,18/6,1,5/00,2/00,36,MeanTest.testWeightedMean(),1,37,2,1/18,1/00,6,6,10,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/SecondMomentTest.java,41,9,0/0,1,26/8,1,2/00,1/00,35,SecondMomentTest.expectedValue(),1,36,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/SemiVarianceTest.java,133,82,2/4,63,12/0,1,9/00,7/22,30,SemiVarianceTest.testInsufficientData(),3,34,3,1/17,1/50,17,39,21,5,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/SkewnessTest.java,58,20,0/0,17,25/9,1,3/00,3/33,37,SkewnessTest.testNaN(),1,38,2,1/20,1/00,6,4,10,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviationTest.java,87,39,2/6,30,25/3,1,5/00,5/20,87,StandardDeviationTest.populationStandardDeviation(),2,91,3,1/51,1/20,7,6,25,1,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/ThirdMomentTest.java,41,9,0/0,1,26/8,1,2/00,1/00,35,ThirdMomentTest.expectedValue(),1,36,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,104,45,2/2,47,25/0,1,7/00,4/29,91,VarianceTest.populationVariance(),2,95,3,1/53,1/14,7,8,29,1,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovarianceTest.java,76,38,10/5,31,9/2,1,5/00,4/20,41,VectorialCovarianceTest.testMismatch(),2,43,3,1/21,1/33,9,17,7,5,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialMeanTest.java,71,37,10/8,25,9/9,1,5/00,4/40,40,VectorialMeanTest.testMismatch(),2,42,3,1/22,1/33,8,17,8,4,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,282,172,0/0,303,8/5,1,2/00,1/50,38,MultivariateSummaryStatisticsTest.testSetterInjection(),1,39,2,0/05,1/00,166,3,3,0,0,0,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/stat/descriptive/rank/MaxTest.java,67,31,0/0,31,14/9,1,4/00,4/00,36,MaxTest.testNaNs(),1,37,2,1/23,1/00,9,6,16,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/rank/MedianTest.java,40,9,0/0,1,25/0,1,2/00,1/00,34,MedianTest.expectedValue(),1,35,2,0/78,1/00,4,3,2,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/rank/MinTest.java,67,31,0/0,31,14/9,1,4/00,4/00,36,MinTest.testNaNs(),1,37,2,1/23,1/00,9,6,16,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,154,87,5/7,72,11/7,1,11/00,6/18,64,PercentileTest.testSetQuantile(),3,77,3,1/82,1/45,7,12,58,10,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValuesTest.java,74,37,0/0,50,6/8,1,4/00,6/75,35,StatisticalSummaryValuesTest.testToString(),1,36,2,1/57,1/00,6,4,27,0,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,176,96,6/3,121,14/8,1,8/00,9/75,80,StorelessUnivariateStatisticAbstractTest.testConsistency(),3,175,4,1/88,1/75,7,11,66,11,1,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/stat/descriptive/summary/ProductTest.java,79,35,0/0,32,19/0,1,7/00,2/86,37,ProductTest.checkClearValue(),1,38,2,1/37,1/00,7,8,20,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/stat/descriptive/summary/SumLogTest.java,71,29,0/0,27,23/9,1,4/00,4/25,37,SumLogTest.checkClearValue(),1,38,2,1/34,1/00,7,5,17,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/stat/descriptive/summary/SumSqTest.java,63,27,0/0,23,17/5,1,4/00,3/75,38,SumSqTest.checkClearValue(),1,39,2,1/30,1/00,7,5,15,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/stat/descriptive/summary/SumTest.java,70,31,0/0,29,15/7,1,6/00,2/83,37,SumTest.checkClearValue(),1,38,2,1/32,1/00,7,7,17,0,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,307,214,0/0,289,7/5,1,11/00,16/27,52,SummaryStatisticsTest.verifySummary(),1,53,2,1/79,1/00,10,25,179,0,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,25,4,0/0,1,20/0,1,1/00,1/00,25,SynchronizedDescriptiveStatisticsTest.createDescriptiveStatistics(),1,26,2,0/75,1/00,2,1,1,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatisticsTest.java,26,4,0/0,1,19/2,1,1/00,1/00,25,SynchronizedMultivariateSummaryStatisticsTest.createMultivariateSummaryStatistics(),1,26,2,0/75,1/00,2,1,1,0,0,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatisticsTest.java,25,4,0/0,1,20/0,1,1/00,1/00,24,SynchronizedSummaryStatisticsTest.createSummaryStatistics(),1,25,2,0/75,1/00,2,1,1,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,190,106,5/7,73,15/3,1,6/00,10/00,166,UnivariateStatisticAbstractTest.testWeightedConsistency(),6,199,4,1/57,2/00,10,36,51,8,1,0,0,0,0,0,16,3,0
src/test/java/org/apache/commons/math/stat/FrequencyTest.java,241,185,2/2,239,8/7,1,9/00,17/67,151,FrequencyTest.testAdd(),4,158,3,1/85,1/44,9,17,152,7,0,0,0,0,0,0,13,3,0
src/test/java/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,228,121,10/7,76,14/9,1,7/00,15/43,35,ChiSquareTestTest.testChiSquareIndependence(),6,55,3,2/07,2/86,5,8,82,26,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/inference/MannWhitneyUTestTest.java,87,35,17/1,17,28/7,1,2/00,14/00,50,MannWhitneyUTestTest.testMannWhitneyUInputValidation(),7,54,3,2/03,4/00,4,3,16,12,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/stat/inference/OneWayAnovaTest.java,96,54,3/7,43,10/4,1,3/00,13/33,46,OneWayAnovaTest.testAnovaFValue(),3,67,3,1/70,1/67,6,8,36,4,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/inference/TestUtilsTest.java,411,246,13/8,179,12/9,1,11/00,19/91,309,TestUtilsTest.testTwoSampleTHeterscedastic(),11,56,3,2/11,4/09,8,19,157,62,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/stat/inference/TTestTest.java,263,155,15/5,114,11/0,1,7/00,19/43,161,TTestTest.testTwoSampleTHeterscedastic(),11,54,3,2/10,4/43,7,12,94,42,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestTest.java,157,71,19/7,39,32/5,1,2/00,32/00,64,WilcoxonSignedRankTestTest.testWilcoxonSignedRankInputValidation(),15,73,3,2/23,8/00,4,3,37,27,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/stat/ranking/NaturalRankingTest.java,186,144,0/0,86,3/8,1,7/00,17/86,42,NaturalRankingTest.testNaNsAndInfs(),1,43,2,1/83,1/00,6,13,125,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,262,157,3/2,104,14/9,1,16/00,7/25,218,GLSMultipleLinearRegressionTest.testGLSEfficiency(),5,236,4,1/74,1/31,15,26,102,13,1,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,1001,504,14/5,384,11/1,1,19/00,25/58,90,MillerUpdatingRegressionTest.testNegativeTestAddObs(),11,802,4,1/57,4/50,22,236,185,57,4,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,114,64,1/6,44,4/4,1,11/00,3/36,61,MultipleLinearRegressionAbstractTest.canEstimateRegressandVariance(),2,63,3,1/50,1/09,7,20,35,2,0,0,0,0,0,0,10,3,0
src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,708,268,2/6,183,12/7,2,10/50,11/10,377,OLSMultipleLinearRegressionTest.testHat(),3,92,5,2/00,1/38,12,24,192,34,6,1,0,0,0,0,14,3,0
src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,443,247,3/2,382,13/3,1,19/00,11/16,112,SimpleRegressionTest.testSSENonNegative(),2,118,3,1/88,1/42,6,29,201,11,0,0,0,0,0,0,11,3,0
src/test/java/org/apache/commons/math/stat/StatUtilsTest.java,425,254,8/7,204,18/1,1,16/00,13/63,419,StatUtilsTest.testDifferenceStats(),4,102,3,1/99,2/38,9,27,176,42,0,0,0,0,0,0,18,3,0
src/test/java/org/apache/commons/math/TestUtils.java,456,204,16/2,173,34/0,1,23/00,7/13,166,TestUtils.assertRelativelyEquals(),7,485,5,2/24,2/57,18,22,83,58,20,3,0,0,0,0,19,3,0
src/test/java/org/apache/commons/math/transform/FastCosineTransformerTest.java,111,55,16/4,25,20/7,1,3/00,15/33,38,FastCosineTransformerTest.testAdHocData(),5,49,3,1/95,4/00,6,3,34,12,0,0,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/transform/FastFourierTransformerTest.java,162,86,0/0,98,13/6,1,1/00,26/00,39,FastFourierTransformerTest.testAdHocData(),1,40,2,0/82,1/00,46,11,30,0,0,0,0,0,0,0,21,3,0
src/test/java/org/apache/commons/math/transform/FastHadamardTransformerTest.java,109,46,13/0,27,23/9,1,8/00,4/13,80,FastHadamardTransformerTest.checkInverseDoubleTransform(),3,67,3,1/76,1/75,5,8,26,7,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,110,56,16/1,27,20/9,1,3/00,15/67,38,FastSineTransformerTest.testAdHocData(),5,49,3,1/95,4/00,6,3,35,12,0,0,0,0,0,0,17,3,0
src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,676,457,14/2,424,10/7,1,24/00,17/50,684,ArithmeticUtilsTest.binomialCoefficient(),12,203,5,2/27,3/83,12,25,277,119,18,6,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/util/BigRealFieldTest.java,36,12,0/0,9,2/8,1,3/00,1/33,27,BigRealFieldTest.testSerial(),1,28,2,0/92,1/00,5,3,4,0,0,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/util/BigRealTest.java,159,77,0/0,154,0/0,1,1/00,55/00,30,BigRealTest.testConstructor(),1,33,2,1/58,1/00,10,13,55,0,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/util/ContinuedFractionTest.java,39,13,0/0,2,7/7,2,1/50,2/67,33,ContinuedFractionTest.testGoldenRatio(),1,34,4,1/71,1/00,4,2,4,2,2,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,99,43,4/7,24,23/2,1,7/00,4/00,48,DefaultTransformerTest.testTransformObject(),2,51,3,1/56,1/33,8,7,24,4,0,0,0,0,0,0,9,3,0
src/test/java/org/apache/commons/math/util/DoubleArrayAbstractTest.java,112,47,6/4,45,5/4,1,4/00,9/00,37,DoubleArrayAbstractTest.testAddElementRolling(),2,40,3,1/72,1/75,5,6,33,3,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,113,50,20/0,30,50/4,1,3/00,12/33,71,FastMathLoadCheck.main(),8,104,4,2/02,4/33,3,9,24,12,2,0,0,0,0,0,6,3,0
src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,31,4,0/0,1,29/0,1,1/00,1/00,29,FastMathResourcesSave.main(),1,30,2,0/75,1/00,2,1,1,0,0,0,0,0,0,0,2,3,0
src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,233,142,22/5,70,16/7,1,8/00,13/88,98,FastMathStrictComparisonTest.reportFailedResults(),19,217,9+,3/13,5/75,15,16,42,25,13,7,5,6,7,6,11,3,0
src/test/java/org/apache/commons/math/util/FastMathTest.java,864,536,10/1,871,10/6,1,50/00,9/34,592,FastMathTest.testAtan2Accuracy(),6,1042,5,2/33,2/08,15,54,277,123,64,3,0,0,0,0,51,3,0
src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,907,583,10/3,312,2/2,61,1/36,6/63,65,FastMathTestPerformance.testAbs(),4,560,4,2/13,1/72,6,87,430,60,60,0,0,0,0,0,15,3,0
src/test/java/org/apache/commons/math/util/IncrementorTest.java,118,75,2/7,67,5/9,2,5/50,5/18,52,IncrementorTest.testCanIncrement2(),3,106,4,1/75,1/18,6,13,52,4,1,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/util/MathArraysTest.java,592,247,2/0,329,3/5,1,10/00,20/40,35,MathArraysTest.testCheckOrder(),1,36,2,0/56,1/00,129,100,19,0,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/util/MathUtilsTest.java,299,174,11/5,156,6/4,1,19/00,8/37,31,MathUtilsTest.testHash(),5,45,5,1/25,3/00,30,101,24,12,3,4,0,0,0,0,72,3,0
src/test/java/org/apache/commons/math/util/MultidimensionalCounterTest.java,166,82,19/5,48,7/8,1,5/00,14/00,31,MultidimensionalCounterTest.testPreconditions(),9,157,4,2/20,4/20,7,5,38,29,3,0,0,0,0,0,3,3,0
src/test/java/org/apache/commons/math/util/OpenIntToDoubleHashMapTest.java,285,190,10/5,228,7/4,1,23/00,6/70,226,OpenIntToDoubleHashMapTest.testContainsKey(),4,70,3,1/97,1/87,12,24,111,43,0,0,0,0,0,0,5,3,0
src/test/java/org/apache/commons/math/util/OpenIntToFieldTest.java,294,162,0/0,275,6/1,1,1/00,142/00,,,0,44,2,1/77,0/00,17,3,142,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/util/PairTest.java,41,18,0/0,22,7/3,1,1/00,13/00,25,PairTest.testAccessor(),1,27,2,1/50,1/00,4,1,13,0,0,0,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/util/PrecisionTest.java,409,324,4/0,542,7/6,1,12/00,25/33,31,PrecisionTest.testEqualsIncludingNaN(),5,41,5,2/04,2/08,8,12,279,14,7,4,0,0,0,0,4,3,0
src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,462,345,4/9,391,10/2,1,16/00,20/19,46,ResizableDoubleArrayTest.testConstructors(),5,58,3,1/36,1/83,18,196,121,10,0,0,0,0,0,0,7,3,0
src/test/java/org/apache/commons/math/util/TestBean.java,61,17,0/0,2,34/4,1,6/00,0/83,34,TestBean.setZ(),1,35,2,1/06,1/00,4,8,5,0,0,0,0,0,0,0,8,3,0
src/test/java/org/apache/commons/math/util/TransformerMapTest.java,108,51,0/0,52,22/2,1,8/00,4/75,33,TransformerMapTest.testSerial(),1,34,2,1/65,1/00,5,8,38,0,0,0,0,0,0,0,5,3,0
